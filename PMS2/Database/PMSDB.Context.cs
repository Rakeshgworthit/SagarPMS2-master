//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PMS.Database
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;

    public partial class PMSEntities : DbContext
    {
        public PMSEntities()
            : base("name=PMSEntities")
        {
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }

        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<additions_omissions> additions_omissions { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<bank> banks { get; set; }
        public virtual DbSet<branch> branches { get; set; }
        public virtual DbSet<company> companies { get; set; }
        public virtual DbSet<country> countries { get; set; }
        public virtual DbSet<customer> customers { get; set; }
        public virtual DbSet<loan> loans { get; set; }
        public virtual DbSet<mode_of_payment> mode_of_payment { get; set; }
        public virtual DbSet<payment_detail> payment_detail { get; set; }
        public virtual DbSet<payment> payments { get; set; }
        public virtual DbSet<project_status> project_status { get; set; }
        public virtual DbSet<project> projects { get; set; }
        public virtual DbSet<projects_budget> projects_budget { get; set; }
        public virtual DbSet<projects_budget_detail> projects_budget_detail { get; set; }
        public virtual DbSet<receipt> receipts { get; set; }
        public virtual DbSet<salesman> salesmen { get; set; }
        public virtual DbSet<status> status { get; set; }
        public virtual DbSet<supplier> suppliers { get; set; }
        public virtual DbSet<tbl_projectdocument> tbl_projectdocument { get; set; }
        public virtual DbSet<user_access_rights> user_access_rights { get; set; }
        public virtual DbSet<user_detail> user_detail { get; set; }
        public virtual DbSet<payment_details_description> payment_details_description { get; set; }
        public virtual DbSet<discount> discounts { get; set; }

        public virtual int SSP_Add_Payment_Detail(Nullable<int> payment_id, string supplier_inv_number, Nullable<decimal> invoice_amount, Nullable<decimal> gst_percentage, Nullable<decimal> gst_amount, Nullable<decimal> payment_amount, Nullable<decimal> agreed_amount, Nullable<long> project_id,string InvRemarks)
        {
            var payment_idParameter = payment_id.HasValue ?
                new ObjectParameter("payment_id", payment_id) :
                new ObjectParameter("payment_id", typeof(int));

            var supplier_inv_numberParameter = supplier_inv_number != null ?
                new ObjectParameter("supplier_inv_number", supplier_inv_number) :
                new ObjectParameter("supplier_inv_number", typeof(string));

            var invoice_amountParameter = invoice_amount.HasValue ?
                new ObjectParameter("invoice_amount", invoice_amount) :
                new ObjectParameter("invoice_amount", typeof(decimal));

            var gst_percentageParameter = gst_percentage.HasValue ?
                new ObjectParameter("gst_percentage", gst_percentage) :
                new ObjectParameter("gst_percentage", typeof(decimal));

            var gst_amountParameter = gst_amount.HasValue ?
                new ObjectParameter("gst_amount", gst_amount) :
                new ObjectParameter("gst_amount", typeof(decimal));

            var payment_amountParameter = payment_amount.HasValue ?
                new ObjectParameter("payment_amount", payment_amount) :
                new ObjectParameter("payment_amount", typeof(decimal));

            var agreed_amountParameter = agreed_amount.HasValue ?
                new ObjectParameter("agreed_amount", agreed_amount) :
                new ObjectParameter("agreed_amount", typeof(decimal));

            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(long));

            var InvRemarksParamter = InvRemarks != null ?
               new ObjectParameter("InvRemarks", InvRemarks) :
               new ObjectParameter("InvRemarks", typeof(string));


            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SSP_Add_Payment_Detail", payment_idParameter, supplier_inv_numberParameter, invoice_amountParameter, gst_percentageParameter, gst_amountParameter, payment_amountParameter, agreed_amountParameter, project_idParameter, InvRemarksParamter);
        }

        public virtual ObjectResult<SSP_Add_Project_Budget_Detail_Result> SSP_Add_Project_Budget_Detail(Nullable<long> project_budget_details_id, Nullable<long> project_budget_id, Nullable<long> supplier_id, Nullable<decimal> budget_amount, string remarks)
        {
            var project_budget_details_idParameter = project_budget_details_id.HasValue ?
                new ObjectParameter("project_budget_details_id", project_budget_details_id) :
                new ObjectParameter("project_budget_details_id", typeof(long));

            var project_budget_idParameter = project_budget_id.HasValue ?
                new ObjectParameter("project_budget_id", project_budget_id) :
                new ObjectParameter("project_budget_id", typeof(long));

            var supplier_idParameter = supplier_id.HasValue ?
                new ObjectParameter("supplier_id", supplier_id) :
                new ObjectParameter("supplier_id", typeof(long));

            var budget_amountParameter = budget_amount.HasValue ?
                new ObjectParameter("budget_amount", budget_amount) :
                new ObjectParameter("budget_amount", typeof(decimal));

            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Add_Project_Budget_Detail_Result>("SSP_Add_Project_Budget_Detail", project_budget_details_idParameter, project_budget_idParameter, supplier_idParameter, budget_amountParameter, remarksParameter);
        }

        public virtual ObjectResult<SSP_BankChequeReport_Result> SSP_BankChequeReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> branchId, Nullable<int> bankId, Nullable<int> chqFrom, Nullable<int> chqTo)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));

            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("bankId", bankId) :
                new ObjectParameter("bankId", typeof(int));

            var chqFromParameter = chqFrom.HasValue ?
                new ObjectParameter("ChqFrom", chqFrom) :
                new ObjectParameter("ChqFrom", typeof(int));

            var chqToParameter = chqTo.HasValue ?
                new ObjectParameter("ChqTo", chqTo) :
                new ObjectParameter("ChqTo", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_BankChequeReport_Result>("SSP_BankChequeReport", fromDateParameter, toDateParameter, branchIdParameter, bankIdParameter, chqFromParameter, chqToParameter);
        }

        public virtual ObjectResult<SSP_Banks_Result> SSP_Banks(Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy)
        {
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));

            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Banks_Result>("SSP_Banks", startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter);
        }

        public virtual ObjectResult<SSP_Branches_Result> SSP_Branches(Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy)
        {
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));

            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Branches_Result>("SSP_Branches", startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter);
        }

        public virtual ObjectResult<SSP_Company_Result> SSP_Company(Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy)
        {
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));

            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Company_Result>("SSP_Company", startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter);
        }

        public virtual ObjectResult<SSP_Customer_Result> SSP_Customer(Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy, string customerSearch)
        {
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));

            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));

            var customerSearchParameter = customerSearch != null ?
                new ObjectParameter("CustomerSearch", customerSearch) :
                new ObjectParameter("CustomerSearch", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Customer_Result>("SSP_Customer", startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter, customerSearchParameter);
        }

        public virtual ObjectResult<Nullable<decimal>> SSP_getBudgetedCost(Nullable<int> projectId, Nullable<int> supplierId)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("projectId", projectId) :
                new ObjectParameter("projectId", typeof(int));

            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("supplierId", supplierId) :
                new ObjectParameter("supplierId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SSP_getBudgetedCost", projectIdParameter, supplierIdParameter);
        }

        public virtual ObjectResult<Nullable<decimal>> SSP_getBudgetedCostByid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SSP_getBudgetedCostByid", idParameter);
        }

        public virtual ObjectResult<SSP_GetPaymentDetail_Result> SSP_GetPaymentDetail(Nullable<int> paymentid, Nullable<int> supplierId)
        {
            var paymentidParameter = paymentid.HasValue ?
                new ObjectParameter("paymentid", paymentid) :
                new ObjectParameter("paymentid", typeof(int));

            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("supplierId", supplierId) :
                new ObjectParameter("supplierId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_GetPaymentDetail_Result>("SSP_GetPaymentDetail", paymentidParameter, supplierIdParameter);
        }

        public virtual ObjectResult<SSP_Loan_Result> SSP_Loan(Nullable<System.Guid> userID, Nullable<int> branchId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));

            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));

            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Loan_Result>("SSP_Loan", userIDParameter, branchIdParameter, fromDateParameter, toDateParameter, startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter);
        }

        public virtual ObjectResult<SSP_LoanReport_Result> SSP_LoanReport(Nullable<int> employeeId, Nullable<int> employeeType, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));

            var employeeTypeParameter = employeeType.HasValue ?
                new ObjectParameter("EmployeeType", employeeType) :
                new ObjectParameter("EmployeeType", typeof(int));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_LoanReport_Result>("SSP_LoanReport", employeeIdParameter, employeeTypeParameter, fromDateParameter, toDateParameter);
        }

        public virtual ObjectResult<SSP_payment_ProjectCostingReport_Result> SSP_payment_ProjectCostingReport(Nullable<int> project_id)
        {
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_payment_ProjectCostingReport_Result>("SSP_payment_ProjectCostingReport", project_idParameter);
        }

        public virtual ObjectResult<SSP_PaymentById_Result> SSP_PaymentById(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_PaymentById_Result>("SSP_PaymentById", idParameter);
        }

        public virtual ObjectResult<SSP_PaymentReport_Result> SSP_PaymentReport(string userID, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> branchid, Nullable<int> bankID, Nullable<int> projectID, Nullable<int> salesmanID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));

            var branchidParameter = branchid.HasValue ?
                new ObjectParameter("branchid", branchid) :
                new ObjectParameter("branchid", typeof(int));

            var bankIDParameter = bankID.HasValue ?
                new ObjectParameter("bankID", bankID) :
                new ObjectParameter("bankID", typeof(int));

            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));

            var salesmanIDParameter = salesmanID.HasValue ?
                new ObjectParameter("SalesmanID", salesmanID) :
                new ObjectParameter("SalesmanID", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_PaymentReport_Result>("SSP_PaymentReport", userIDParameter, fromdateParameter, todateParameter, branchidParameter, bankIDParameter, projectIDParameter, salesmanIDParameter);
        }

        public virtual ObjectResult<SSP_Payments_Result> SSP_Payments(Nullable<System.Guid> userID, Nullable<int> branchId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> projectId, Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy, Nullable<int> salesMenId, string searchString)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));

            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));

            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));

            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));

            var salesMenIdParameter = salesMenId.HasValue ?
                new ObjectParameter("salesMenId", salesMenId) :
                new ObjectParameter("salesMenId", typeof(int));

            var searchStringParameter = searchString != null ?
                new ObjectParameter("searchText", searchString) :
                new ObjectParameter("searchText", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Payments_Result>("SSP_Payments", userIDParameter, branchIdParameter, fromDateParameter, toDateParameter, projectIdParameter, startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter, salesMenIdParameter, searchStringParameter);
        }

        public virtual ObjectResult<SSP_ProjectCostingReport_Result> SSP_ProjectCostingReport(Nullable<long> project_id)
        {
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_ProjectCostingReport_Result>("SSP_ProjectCostingReport", project_idParameter);
        }

        public virtual ObjectResult<SSP_ProjectListingStatusByBranch_Result> SSP_ProjectListingStatusByBranch(string userID, Nullable<int> year, Nullable<int> branchid)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));

            var branchidParameter = branchid.HasValue ?
                new ObjectParameter("branchid", branchid) :
                new ObjectParameter("branchid", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_ProjectListingStatusByBranch_Result>("SSP_ProjectListingStatusByBranch", userIDParameter, yearParameter, branchidParameter);
        }

        public virtual ObjectResult<SSP_Projects_Result> SSP_Projects(Nullable<System.Guid> userID, Nullable<int> branchId, Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> projectStatus, Nullable<int> salesMenId, string searchStringmyprojects)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));

            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));

            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));

            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));

            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));

            var projectStatusParameter = projectStatus.HasValue ?
                new ObjectParameter("projectStatus", projectStatus) :
                new ObjectParameter("projectStatus", typeof(int));

            var salesMenIdParameter = salesMenId.HasValue ?
                new ObjectParameter("salesMenId", salesMenId) :
                new ObjectParameter("salesMenId", typeof(int));

            var searchStringmyprojectsParameter = searchStringmyprojects != null ?
                new ObjectParameter("searchText", searchStringmyprojects) :
                new ObjectParameter("searchText", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Projects_Result>("SSP_Projects", userIDParameter, branchIdParameter, startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter, fromdateParameter, todateParameter, projectStatusParameter, salesMenIdParameter, searchStringmyprojectsParameter);
        }

        public virtual ObjectResult<SSP_Projects_budget_Result> SSP_Projects_budget(Nullable<System.Guid> userID, Nullable<int> branchId, Nullable<int> projectId, Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy, Nullable<int> supplierId, string searchString, Nullable<int> SalesmenId)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));

            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));

            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));

            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));

            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));

            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));

            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));

            var SalesmenIdParameter = SalesmenId.HasValue ?
               new ObjectParameter("SalesmenId", SalesmenId) :
               new ObjectParameter("SalesmenId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Projects_budget_Result>("SSP_Projects_budget", userIDParameter, branchIdParameter, projectIdParameter, startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter, supplierIdParameter, searchStringParameter, SalesmenIdParameter);
        }

        public virtual ObjectResult<SSP_ProjectsBySalesman_Result> SSP_ProjectsBySalesman(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string userID, Nullable<int> salesmenId, Nullable<int> branchId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            var salesmenIdParameter = salesmenId.HasValue ?
                new ObjectParameter("SalesmenId", salesmenId) :
                new ObjectParameter("SalesmenId", typeof(int));

            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_ProjectsBySalesman_Result>("SSP_ProjectsBySalesman", fromDateParameter, toDateParameter, userIDParameter, salesmenIdParameter, branchIdParameter);
        }

        public virtual ObjectResult<SSP_ProjectSummeryReport_Result> SSP_ProjectSummeryReport(string userID, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> branchid, Nullable<int> salesmanID, string projectStatus)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));

            var branchidParameter = branchid.HasValue ?
                new ObjectParameter("branchid", branchid) :
                new ObjectParameter("branchid", typeof(int));

            var salesmanIDParameter = salesmanID.HasValue ?
                new ObjectParameter("SalesmanID", salesmanID) :
                new ObjectParameter("SalesmanID", typeof(int));

            var projectStatusParameter = projectStatus != null ?
                new ObjectParameter("ProjectStatus", projectStatus) :
                new ObjectParameter("ProjectStatus", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_ProjectSummeryReport_Result>("SSP_ProjectSummeryReport", userIDParameter, fromdateParameter, todateParameter, branchidParameter, salesmanIDParameter, projectStatusParameter);
        }

        public virtual ObjectResult<SSP_ReceiptReport_Result> SSP_ReceiptReport(string userID, Nullable<int> branchId, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> bankid, Nullable<int> projectid, Nullable<int> salemenid)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));

            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));

            var bankidParameter = bankid.HasValue ?
                new ObjectParameter("bankid", bankid) :
                new ObjectParameter("bankid", typeof(int));

            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(int));

            var salemenidParameter = salemenid.HasValue ?
                new ObjectParameter("salemenid", salemenid) :
                new ObjectParameter("salemenid", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_ReceiptReport_Result>("SSP_ReceiptReport", userIDParameter, branchIdParameter, fromdateParameter, todateParameter, bankidParameter, projectidParameter, salemenidParameter);
        }

        public virtual ObjectResult<SSP_Receipts_Result> SSP_Receipts(Nullable<System.Guid> userID, Nullable<int> branchId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> projectId, Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy, Nullable<int> salesMenId, string searchString)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));

            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));

            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));

            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));

            var salesMenIdParameter = salesMenId.HasValue ?
                new ObjectParameter("salesMenId", salesMenId) :
                new ObjectParameter("salesMenId", typeof(int));

            var searchStringParameter = searchString != null ?
                new ObjectParameter("searchText", searchString) :
                new ObjectParameter("searchText", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Receipts_Result>("SSP_Receipts", userIDParameter, branchIdParameter, fromDateParameter, toDateParameter, projectIdParameter, startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter, salesMenIdParameter, searchStringParameter);
        }

        public virtual int SSP_Remove_Payment_Detail(Nullable<int> payment_id)
        {
            var payment_idParameter = payment_id.HasValue ?
                new ObjectParameter("payment_id", payment_id) :
                new ObjectParameter("payment_id", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SSP_Remove_Payment_Detail", payment_idParameter);
        }

        public virtual int SSP_Remove_Project_Budget_Detail(Nullable<int> project_budget_id)
        {
            var project_budget_idParameter = project_budget_id.HasValue ?
                new ObjectParameter("project_budget_id", project_budget_id) :
                new ObjectParameter("project_budget_id", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SSP_Remove_Project_Budget_Detail", project_budget_idParameter);
        }

        public virtual ObjectResult<SSP_Salesmen_Result> SSP_Salesmen(Nullable<int> branchID, Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy, string SalesmenSearch)
        {
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));

            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));

            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));

            var SalesmenSearchParameter = SalesmenSearch != null ?
                new ObjectParameter("SalesmenSearch", SalesmenSearch) :
                new ObjectParameter("SalesmenSearch", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Salesmen_Result>("SSP_Salesmen", branchIDParameter, startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter, SalesmenSearchParameter);
        }

        public virtual ObjectResult<SSP_SaleSummeryReport_Result> SSP_SaleSummeryReport(string userID, Nullable<int> branchId, Nullable<int> year)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));

            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_SaleSummeryReport_Result>("SSP_SaleSummeryReport", userIDParameter, branchIdParameter, yearParameter);
        }

        public virtual ObjectResult<SSP_Supplier_Result> SSP_Supplier(Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy, string SupplierSearch)
        {
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));

            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));

            var SupplierSearchParameter = SupplierSearch != null ?
               new ObjectParameter("SupplierSearch", SupplierSearch) :
               new ObjectParameter("SupplierSearch", typeof(string));


            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Supplier_Result>("SSP_Supplier", startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter, SupplierSearchParameter);
        }

        public virtual ObjectResult<SSP_SupplierReport_Result> SSP_SupplierReport(string userID, Nullable<int> year, Nullable<int> branchid, Nullable<int> salesmanID, string startWith, string invoicesNo)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));

            var branchidParameter = branchid.HasValue ?
                new ObjectParameter("branchid", branchid) :
                new ObjectParameter("branchid", typeof(int));

            var salesmanIDParameter = salesmanID.HasValue ?
                new ObjectParameter("SalesmanID", salesmanID) :
                new ObjectParameter("SalesmanID", typeof(int));

            var startWithParameter = startWith != null ?
                new ObjectParameter("StartWith", startWith) :
                new ObjectParameter("StartWith", typeof(string));

            var invoicesNoParameter = invoicesNo != null ?
                new ObjectParameter("InvoicesNo", invoicesNo) :
                new ObjectParameter("InvoicesNo", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_SupplierReport_Result>("SSP_SupplierReport", userIDParameter, yearParameter, branchidParameter, salesmanIDParameter, startWithParameter, invoicesNoParameter);
        }

        public virtual ObjectResult<SSP_UserBranches_Result> SSP_UserBranches(Nullable<System.Guid> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_UserBranches_Result>("SSP_UserBranches", userIDParameter);
        }

        public virtual ObjectResult<SSP_Users_Result> SSP_Users(string name, string emailID, Nullable<bool> status, Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));

            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));

            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));

            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));

            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Users_Result>("SSP_Users", nameParameter, emailIDParameter, statusParameter, startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter);
        }

        public virtual ObjectResult<SSP_UsersRoles_Result> SSP_UsersRoles(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_UsersRoles_Result>("SSP_UsersRoles", userIDParameter);
        }

        public virtual ObjectResult<SSP_UsersRolesById_Result> SSP_UsersRolesById(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_UsersRolesById_Result>("SSP_UsersRolesById", userIDParameter);
        }

        public virtual ObjectResult<SSP_getBudgetedInvoice_Result> SSP_getBudgetedInvoice(Nullable<int> projectId, Nullable<int> supplierId)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("projectId", projectId) :
                new ObjectParameter("projectId", typeof(int));

            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("supplierId", supplierId) :
                new ObjectParameter("supplierId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_getBudgetedInvoice_Result>("SSP_getBudgetedInvoice", projectIdParameter, supplierIdParameter);
        }

        public virtual ObjectResult<SSP_SaleIndividualReport_Result> SSP_SaleIndividualReport(string userID, Nullable<int> salesmenId, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string projectStatus)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));

            var salesmenIdParameter = salesmenId.HasValue ?
                new ObjectParameter("SalesmenId", salesmenId) :
                new ObjectParameter("SalesmenId", typeof(int));

            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));

            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));

            var projectStatusParameter = projectStatus != null ?
                new ObjectParameter("ProjectStatus", projectStatus) :
                new ObjectParameter("ProjectStatus", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_SaleIndividualReport_Result>("SSP_SaleIndividualReport", userIDParameter, salesmenIdParameter, fromdateParameter, todateParameter, projectStatusParameter);
        }

        public virtual ObjectResult<SSP_PaymentDetailsForSMS_Result> SSP_PaymentDetailsForSMS(Nullable<int> project_id)
        {
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_PaymentDetailsForSMS_Result>("SSP_PaymentDetailsForSMS", project_idParameter);
        }

        public virtual ObjectResult<SSP_GetSalesmenAndUser_Result> SSP_GetSalesmenAndUser(Nullable<int> branchId, string status)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));

            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_GetSalesmenAndUser_Result>("SSP_GetSalesmenAndUser", branchIdParameter, statusParameter);
        }

        public virtual ObjectResult<SSP_GetSuppliersForSMS_Result> SSP_GetSuppliersForSMS(string supplierIds)
        {
            var supplierIdsParameter = supplierIds != null ?
                new ObjectParameter("SupplierIds", supplierIds) :
                new ObjectParameter("SupplierIds", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_GetSuppliersForSMS_Result>("SSP_GetSuppliersForSMS", supplierIdsParameter);
        }

        public virtual ObjectResult<SSP_Payment_Detail_Description_Result> SSP_Payment_Detail_Description(Nullable<long> paymentId, string description, Nullable<decimal> amount, string flag, Nullable<int> id)
        {
            var paymentIdParameter = paymentId.HasValue ?
                new ObjectParameter("paymentId", paymentId) :
                new ObjectParameter("paymentId", typeof(long));

            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));

            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));

            var flagParameter = flag != null ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(string));

            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Payment_Detail_Description_Result>("SSP_Payment_Detail_Description", paymentIdParameter, descriptionParameter, amountParameter, flagParameter, idParameter);
        }

        public virtual ObjectResult<SSP_Project_additions_Result> SSP_Project_additions(Nullable<System.Guid> userID, Nullable<int> branchId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> projectId, Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy, Nullable<int> salesMenId, string searchStringAdditions)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));

            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));

            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));

            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));

            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));

            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));

            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));

            var salesMenIdParameter = salesMenId.HasValue ?
                new ObjectParameter("salesMenId", salesMenId) :
                new ObjectParameter("salesMenId", typeof(int));

            var searchStringAdditionsParameter = searchStringAdditions != null ?
                new ObjectParameter("SearchStringAdditions", searchStringAdditions) :
                new ObjectParameter("SearchStringAdditions", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Project_additions_Result>("SSP_Project_additions", userIDParameter, branchIdParameter, fromDateParameter, toDateParameter, projectIdParameter, startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter, salesMenIdParameter, searchStringAdditionsParameter);
        }

        public virtual ObjectResult<SSP_Projects_budget_BKP_Result> SSP_Projects_budget_BKP(Nullable<System.Guid> userID, Nullable<int> branchId, Nullable<int> projectId, Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy, Nullable<int> supplierId, string searchProject)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));

            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));

            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));

            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));

            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));

            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));

            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));

            var searchProjectParameter = searchProject != null ?
                new ObjectParameter("SearchProject", searchProject) :
                new ObjectParameter("SearchProject", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Projects_budget_BKP_Result>("SSP_Projects_budget_BKP", userIDParameter, branchIdParameter, projectIdParameter, startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter, supplierIdParameter, searchProjectParameter);
        }

        public virtual ObjectResult<SSP_PaymentsDescription_Result> SSP_PaymentsDescription(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_PaymentsDescription_Result>("SSP_PaymentsDescription", idParameter);
        }

        public virtual ObjectResult<SSP_GetSalesmenAndUser_Result> SSP_GetSupplierByAddress(Nullable<int> AddressId)
        {
            var AddressIdParameter = AddressId.HasValue ?
                new ObjectParameter("AddressId", AddressId) :
                new ObjectParameter("AddressId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_GetSalesmenAndUser_Result>("SSP_GetSupplierByAddress", AddressIdParameter);
        }
    }
}
