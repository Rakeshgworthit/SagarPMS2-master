@using MVCGrid.Web
@model PMS.Models.PaymentsViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .payment-action-links {
        width: 90px;
    }

    .td-class-center {
        text-align: center;
    }

    .well {
        padding: 16px 10px 10px 10px !important;
    }
</style>
<div class="panel box-shadow-none content-header">
    <div class="panel-body">
        <div class="row">
            <div class="col-md-6 col-7">
                <h3 class="animated fadeInLeft text-primary">Supplier Payments</h3>
            </div>
            <div class="col-md-6 col-5 ">
                <div class="col-md-12" style="margin-top:10px;">
                    <button type="button" onclick="openModelpop('/Payments/LoadSupplier', 'id', 0);" class='btn btn-primary pull-right'>
                        <span class="glyphicon glyphicon-phone"></span><span style="padding-left:10px;">Send SMS</span>
                    </button>
                    <button type="button" onclick="LoadAddEdit(0);" class='btn btn-primary pull-right' style="margin-right: 5px;">
                        <i class="fa fa-plus" aria-hidden="true"></i><span style="padding-left:10px;">Add</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<br />
<div class="col-md-12 padding-0">
    <div class="col-md-12">
        <div class="panel">
            <div class="panel-body">

                <div class="well">
                    @using (Html.BeginForm("Index", "Payments", FormMethod.Post, new { id = "SearchForm", name = "SearchForm" }))
                    {
                        <div class="form-inline" style="justify-content: space-around;">
                            <div class="form-group ">
                                <input id="SearchFrom" name="SearchFrom" class="form-control" style="width:100px" value="@Convert.ToDateTime(Model.SearchFrom).ToString("dd/MM/yyyy")" />
                            </div>
                            <div class="form-group">
                                <input id="SearchTo" name="SearchTo" class="form-control" style="width:100px" value="@Convert.ToDateTime(Model.SearchTo).ToString("dd/MM/yyyy")" />
                            </div>
                            <div class="form-group">
                                @Html.DropDownListFor(o => o.SearchProject, Model.projectList, new { @class = "form-control", @tabindex = "3", style = "width:200px" })
                            </div>
                            <div class="form-group">
                                @Html.DropDownListFor(o => o.ProjectSalesmenId, Model.SalesmenList, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label class="control-label" for="from_date">Search:&nbsp;</label>
                                <input id="SearchString" name="SearchString" class="form-control" value="@Model.SearchString" placeholder="Search with" onblur="Search();" maxlength="250" />

                            </div>
                            <input type="hidden" id="branch_id" name="branch_id" value="@PMS.Common.SessionManagement.SelectedBranchID" />
                            <button type="submit" class="btn btn-primary btn-sm" onclick="return SubmitAs('form');"><i class="fa fa-search" aria-hidden="true"></i></button>
                        </div>
                    }
                </div>
                <div style="float:right;margin:5px;">
                    <button type="button" class="btn btn-primary btn-sm" onclick="PrintBatchPreview();"><i class="fa fa-print" aria-hidden="true"></i> Print Batch</button>

                </div>
                <div class="responsive-table">
                    @if (Model.SearchString == null)
                    {
                        Model.SearchString = "";
                    }
                    <input type="hidden" id="branch_id" name="branch_id" value="@PMS.Common.SessionManagement.SelectedBranchID" />
                    @Html.MVCGrid("Payments", new { hdnUID = Model.UID, brId = PMS.Common.SessionManagement.SelectedBranchID, SearchFrom = Model.SearchFrom, SearchTo = Model.SearchTo, SearchProject = Model.SearchProject, ProjectSalesmenId = Model.ProjectSalesmenId, SearchString = Model.SearchString })
                </div>

            </div>
        </div>
    </div>
</div>

<div id="divModel">
    <div id="myModal" class="modal fade" role="dialog" style="z-index:10000">
        <div class="modal-dialog modal-lg modal-content-left">
            <div class="modal-content" id="ModelForm">

            </div>
        </div>
    </div>
</div>

<script>
    function isInt(value) {
        var er = /^-?[0-9]+$/;
        return er.test(value);
    }
    function PrintBatchPreview() {
        debugger
        var Idstr = "";
        $(".clsprintbatch").each(function () {
            if ($(this).is(":checked")) {
                Idstr = Idstr + $(this).attr('alt') + ',';
            }
        });
        if (Idstr.length > 0) {
            Idstr = Idstr.slice(0, -1);
            $.loader({ content: "<img src='/Content/img/Preloader_3.gif' />" });
            //$("#modalcontent").html("<img src='/Content/img/Preloader_3.gif' />");
            $('#mainModel').modal({ backdrop: 'static', keyboard: false });
            var pageName = "/Payments/PrintPreview?Id=" + Idstr;
            $("#modalcontent").load(pageName);
            $.loader('close');
        }
    }

    function LoadAddEdit(id) {
        window.location = '@Url.Action("LoadAddEdit", "Payments")?id=' + id + '&SupplierId=' + 0;
        //openModelpopup('/Payments/LoadAddEdit', 'id', 0, 'SupplierId', 0)
    }
    @*function SavePaymentForm(actiontype) {
        debugger;
        var chval = false;
        if (String($("#payment_mode").val()) == "4" && $("#cheque_number").val() == "" && ($("#bank_id").val() == "" || $("#bank_id").val() == "0")) {
            $(".chequenumbervalidation").show();
            $(".bankvalidation").show();
            chval = true;
        }
        else if (String($("#payment_mode").val()) == "4" && $("#cheque_number").val() == "") {
            $(".chequenumbervalidation").show();
            $(".bankvalidation").hide();
            chval = true;
        } else if (String($("#payment_mode").val()) == "4" && ($("#bank_id").val() == "" || $("#bank_id").val() == "0")) {
            $(".bankvalidation").show();
            $(".chequenumbervalidation").hide();
            chval = true;
        }
        else if ($("#cheque_number").val() != "") {
            if (isNumber($("#cheque_number").val()) == false) {
                $(".chequenumbervalidation").show();
                chval = true;
            }
        }
        else {
            chval = false;
            $(".chequenumbervalidation").hide();
            $(".bankvalidation").hide();
        }

        if ($('#txtActualPaymentAmount').val() == null || $('#txtActualPaymentAmount').val() == undefined || $('#txtActualPaymentAmount').val() == "") {
            $('#divActualPaymentAmountError').show();
        }
        var form = $('#frmPayment');

        $.validator.unobtrusive.parse(form);
        if (form.valid() && chval == false) {
            var jsonData = {
                id: $('#frmPayment').find("#id").val(),
                payment_date: $('#frmPayment').find("#payment_date").val(),
                supplier_id: $('#frmPayment').find("#supplier_id").val(),
                cheque_number: $('#frmPayment').find("#cheque_number").val(),
                isactive: $('#frmPayment').find("#isactive").val(),
                payment_mode: $('#frmPayment').find("#payment_mode").val(),
                bank_id: $('#frmPayment').find("#bank_id").val(),
                rebate_amount: $('#frmPayment').find("#rebate_amount").val(),
                total_payment_amount: $('#frmPayment').find("#txtTotalPaymentAmount").val(),
                actual_payment_amount: $('#frmPayment').find("#txtActualPaymentAmount").val(),
                remarks: $('#frmPayment').find("#remarks").val(),
                collection_date: $('#frmPayment').find("#collection_date").val(),
                description: $('#frmPayment').find("#txtDescription").val(),
                amount: $('#frmPayment').find("#txtAmount1").val(),
                descriptionID: $('#frmPayment').find("#hdnDesc_id").val(),
                Message: $('#frmPayment').find("#Message").val(),
                payment_details: [],
                payment_description: []
            };
            debugger;
            $("#tblbody tr").each(function () {
                debugger;
                var ddlproject_val = $(this).find(".ddlAddressSite").val();
                if (ddlproject_val == "" || ddlproject_val == undefined)
                    ddlproject_val = "0";
                var invoice_amount_val = $(this).find(".invoice_amount").val();
                var gst_percentage_val = $(this).find(".gst_percentage").val();
                var gst_amount_val = $(this).find(".gst_amount").val();
                var payment_amount_val = $(this).find(".payment_amount").val();
                var agreed_amount_val = $(this).find(".payment_amt").val();
                var supplier_inv_number_text = $(this).find(".supplier_invoice_number").val();
                var supplier_inv_number_val = $(this).find(".supplier_invoice_number").val();
                var InvRemarks = $(this).find(".InvRemarks").val();
                jsonData.payment_details.push({
                    project_id: ddlproject_val,
                    invoice_amount: invoice_amount_val,
                    gst_percentage: gst_percentage_val,
                    gst_amount: gst_amount_val,
                    payment_amount: payment_amount_val,
                    supplier_inv_number: supplier_inv_number_val,
                    supplier_inv_number_text: supplier_inv_number_text,
                    agreed_amount: agreed_amount_val,
                    InvRemarks: InvRemarks
                });

            });


            if (jsonData.payment_details.length == 0 || jsonData.payment_details[0] == null || jsonData.payment_details[0].supplier_inv_number == '' ||
                jsonData.payment_details[0].supplier_inv_number == undefined || jsonData.payment_details[0].supplier_inv_number == null) {
                notify("Please add atleast one payment", "error");
            } else {

                $("#tblbodyDescription tr").each(function () {
                    var desc_val = $(this).find(".txtDescription").val();
                    var amount_val = $(this).find(".txtAmount").val();
                    var id_val = $(this).find(".hdnDesc_id").val();
                    jsonData.payment_description.push({
                        description: desc_val,
                        amount: amount_val,
                        descriptionID: id_val
                    });
                });

                var jsonDatachkExisting = {
                    id: $('#frmPayment').find("#id").val(),
                    supplier_id: $('#frmPayment').find("#supplier_id").val(),
                    // project_id: $('#frmPayment').find("#project_id").val(),
                    payment_details_chk_Existing: []
                };

                if (parseInt($('#id').val()) > 0) {
                    $("#tblbody tr").each(function () {
                        //var supplier_inv_number_val = $(this).find(".supplier_inv_number").val();
                        var supplier_inv_number_val = $(this).find(".ddlsupplierinvnumberCls").val();
                        //var project_id_val = $(this).find(".ddlproject_id").val();
                        var project_id_val = $(this).find(".ddlAddressSite").val();
                        if (project_id_val == "" || project_id_val == undefined) {
                            project_id_val == "0";
                        }
                        jsonDatachkExisting.payment_details_chk_Existing.push({
                            supplier_inv_number: supplier_inv_number_val,
                            project_id: project_id_val,
                        });
                    });
                }

                var paymentReturnID = "";
                $.loader({ content: "<img src='/Content/img/Preloader_3.gif' />" });

                var AddNewRecord = false;
                $.ajax({
                    type: "POST",
                    //url: "/Payments/CheckExistingPayment", // the URL of the controller action method
                    url: '@Url.Action("CheckExistingPayment", "Payments")',
                    data: "payobjchkExist=" + JSON.stringify(jsonDatachkExisting), // optional data
                    success: function (result) {
                        $.loader('close');
                        if (result != "0") {
                            if (confirm("There is a payment for this supplier in this project, do you want to add another payment?")) {
                                AddNewRecord = true;
                            }
                        } else {
                            AddNewRecord = true;
                        }
                        console.log(jsonData);
                        if (AddNewRecord == true) {
                            $.loader({ content: "<img src='/Content/img/Preloader_3.gif' />" });
                            debugger;
                            $.ajax({
                                type: "POST",
                                url: '@Url.Action("SaveUpdate", "Payments")',
                                //url: "/Payments/SaveUpdate", // the URL of the controller action method
                                data: "paymentobj=" + JSON.stringify(jsonData), // optional data
                                success: function (result) {
                                    debugger;
                                    if (jsonData.payment_description.length ==0 && ElemArr.length >0 && result.cls == "success") {
                                        $.ajax({
                                            type: "POST",
                                            url: "/Payments/DeleteDescription",
                                            data: { DescId: ElemArr},
                                            success: function (result) {
                                                debugger;
                                            },
                                            error: function (result) {
                                                debugger;
                                            }
                                        });
                                    }
                                    $.loader('close');
                                    if (result.cls == "error") {
                                        notify(result.msg, result.cls);
                                    } else {
                                        // $("#btnClosePayment").click();
                                        // loadGrid();
                                        paymentReturnID = String(result.id);
                                        // notify(result.msg, result.cls);
                                        if (actiontype == "save")
                                            openModelpop('/Payments/LoadSMS', 'collectionDate', $('#frmPayment').find("#collection_date").val());
                                        //$("#btnClose").click();
                                        //loadGrid();

                                        notify(result.msg, result.cls);

                                    }
                                },
                                error: function (req, status, error) {
                                    // do something with error
                                    $.loader('close');
                                    notify(error, "error");
                                }
                            }).done(function () {
                                debugger;
                                if (actiontype == "saveprint" && paymentReturnID != "") {
                                    setTimeout(function () {

                                        openModelpop('/Payments/PrintPreview', 'id', paymentReturnID);
                                    }, 600);

                                }
                            });
                        }
                    },
                    error: function (req, status, error) {
                        $.loader('close');
                        notify(error, "error");
                    }
                });

            }

        }
    }*@


    function loadGrid() {
        MVCGrid.reloadGrid('Payments');
    }

    function SaveForm() {

        var form = $('#frmSupplier');
        $.validator.unobtrusive.parse(form);
        if (form.valid()) {

            $.loader({ content: "<img src='/Content/img/Preloader_3.gif' />" });
            $.ajax({
                type: "POST",
                url: "/Supplier/SaveUpdate", // the URL of the controller action method
                data: {
                    id: $('#frmSupplier').find("#id").val(),
                    supplier_name: $('#frmSupplier').find("#supplier_name").val(),
                    address1: $('#frmSupplier').find("#address1").val(),
                    address2: $('#frmSupplier').find("#address2").val(),
                    address3: $('#frmSupplier').find("#address3").val(),
                    address4: $('#frmSupplier').find("#address4").val(),
                    zip_code: $('#frmSupplier').find("#zip_code").val(),
                    website: $('#frmSupplier').find("#website").val(),
                    contact_person: $('#frmSupplier').find("#contact_person").val(),
                    nric_no: $('#frmSupplier').find("#nric_no").val(),
                    email: $('#frmSupplier').find("#email").val(),
                    phone: $('#frmSupplier').find("#phone").val(),
                    mobile: $('#frmSupplier').find("#mobile").val(),
                    gst_registered: $('#frmSupplier').find("#gst_registered").val(),
                    gst_no: $('#frmSupplier').find("#gst_no").val(),
                    isactive: $('#frmSupplier').find("#isactive").val()
                }, // optional data
                success: function (result) {
                    $.loader('close');
                    if (result.cls == "error") {
                        notify(result.msg, result.cls);
                    }
                    else {
                        $("#btnClose").click();
                        FillPaymentDropdown(result.id);

                    }
                },
                error: function (req, status, error) {
                    // do something with error
                }
            });
        }
    }

    
    $(function () {
        $("#SearchProject").chosen();

        $("#SearchFrom").datepicker({
            changeMonth: true, changeYear: true, dateFormat: "dd/mm/yy",
            onSelect: function (date) {
                var dt2 = $('#SearchTo');
                var startDate = $(this).datepicker('getDate');
                var minDate = $(this).datepicker('getDate');
                dt2.datepicker('option', 'minDate', minDate);
            }
        });
        $('#SearchFrom').removeAttr("data-val-date");

        $("#SearchTo").datepicker({
            changeMonth: true, changeYear: true, dateFormat: "dd/mm/yy",
            onSelect: function (date) {
                var dt1 = $('#SearchFrom');
                var startDate = $(this).datepicker('getDate');
                var maxDate = $(this).datepicker('getDate');
                dt1.datepicker('option', 'maxDate', maxDate);
            }

        });
        $('#SearchTo').removeAttr("data-val-date");
        var val = '@ViewBag.Message';
        if (val) {
            notify(val, 'success');
        }


        //$("#SearchFrom").datepicker({ changeMonth: true, changeYear: true, dateFormat: "dd/mm/yy" });
        //$('#SearchFrom').removeAttr("data-val-date");

        //$("#SearchTo").datepicker({ changeMonth: true, changeYear: true, dateFormat: "dd/mm/yy" });
        //$('#SearchTo').removeAttr("data-val-date");
    });

    function isNumber(n) {
        return !isNaN(parseFloat(n)) && isFinite(n);
    }


    function SubmitAs(obj) {
        debugger;
        var alphanumers = /^[\w\s#-_,/$%]+$/;
        if (!alphanumers.test($("#SearchString").val()) && $("#SearchString").val() != '') {
                notify("Search can have only alphabets and numbers.", "error");
                return false;
        }
        else {
             @*document.location = '@Url.Action("Index", "ProjectsBudget")';*@
            $("#SearchForm").attr('action', '@Url.Action("Index", "Payments")').submit();
            return true;
        }
    }

    function Search() {
        // debugger;
        var alphanumers = /^[\w\s#-_,/$%]+$/;
        if (!alphanumers.test($("#SearchString").val()) && $("#SearchString").val() != '') {
            notify("Search can have only alphabets and numbers.", "error");
            return false;
        }
    }

</script>



