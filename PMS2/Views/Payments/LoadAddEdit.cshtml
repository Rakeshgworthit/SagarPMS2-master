@model PMS.Models.PaymentsViewModel
@{
    //Layout = null;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .supplier_inv_number {
        position: absolute !important;
        width: 87px !important;
        border: 0px solid #ccc !important;
        height: 31px !important;
        margin: 1px !important;
    }

    .ddlAddressSite {
        width: 315px !important;
    }

    .view_icon {
        background-image: url(/content/img/file_search.png);
        background-repeat: no-repeat;
        background-position: center;
        background-size: contain;
    }

        .view_icon:hover {
            background-image: url(/content/img/file_search.png);
            background-repeat: no-repeat;
            background-position: center;
            background-size: contain;
            background-color: white;
        }
</style>    
<div class="panel box-shadow-none content-header">
    <div class="panel-body">
        <div class="row">
            <div class="col-md-6 col-7">
                <h3 class="animated fadeInLeft text-primary">Add/Edit Supplier Payment</h3>
            </div>
            <div class="col-md-6 col-5 ">
                <button type="button" onclick="PaymentList();" class='btn btn-primary pull-right ml-2 mb-2'>
                    <span>Payment List</span>
                </button>
                <button type="button" onclick="BudgetList();" class='btn btn-primary pull-right ml-2 mb-2'>
                    <span>Budget Cost List</span>
                </button>
            </div>
        </div>
    </div>
</div>

<form class="form-horizontal" id="frmPayment" name="frmPayment"style="padding-right:1%; padding-left: 1%;">
    <div class="row"  style="padding-right:10%">
        <div class="col-md-6" >
            <div class="form-group">
                <div class="row mt-2">
                    <label class="control-label col-sm-4" for="name">Payment Date:</label>
                    <div class="input-group col-md-7">
                        <input type="text" id="date_range" class="form-control" value="@Model.payment_date" tabindex="4" />
                        <div class="input-group-append">
                            <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                        </div>
                        @*@Html.TextBoxFor(o => o.payment_date, "{0:dd/MM/yyyy}", new { @class = "form-control", @tabindex = "4" })
                            @Html.ValidationMessageFor(o => o.payment_date, "", new { @class = "text-error" })*@
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <label class="control-label col-sm-4" for="pwd">Supplier:</label>
                    <div class="col-sm-7">
                        @Html.DropDownListFor(o => o.supplier_id, Model.supplierList, new { @id = "SupplierId", @class = "form-control", @tabindex = "6" })
                        @Html.ValidationMessageFor(o => o.supplier_id, "", new { @class = "text-error" })
                        @*<input type="hidden" id="SupplierId" name="SupplierId" value="@Model.supplier_id" />*@
                    </div>
                    <div class="col-sm-1">
                        <button tabindex="20" id="btnCreateSupplier" type="button" style="margin-top:5px; padding: 2px 10px !important;" onclick="AddSupplier(0);" class='btn btn-primary pull-right btn-xs'>
                            <i class="fa fa-plus" style="color: #ffffff; font-size: 15px;" aria-hidden="true"></i>
                        </button>
                    </div>
                </div>
            </div>            

            <div class="form-group">
                <div class="row">
                    <label class="control-label col-sm-4" for="name">Collection Date:</label>
                    <div class="input-group col-md-7">
                        <input type="text" id="date_range_CollectionDate" class="form-control" value="@Model.collection_date" tabindex="5" />
                        <div class="input-group-append">
                            <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                        </div>
                        @*@Html.TextBoxFor(o => o.payment_date, "{0:dd/MM/yyyy}", new { @class = "form-control", @tabindex = "4" })
                            @Html.ValidationMessageFor(o => o.payment_date, "", new { @class = "text-error" })*@
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                <div class="row">
                    <label class="control-label col-sm-4" for="pwd">Mode of Payment:</label>
                    <div class="col-sm-8">
                        @Html.DropDownListFor(o => o.payment_mode, Model.mode_of_paymentList, new { @class = "form-control", @tabindex = "7" })
                        @Html.ValidationMessageFor(o => o.payment_mode, "", new { @class = "text-error" })

                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <label class="control-label col-sm-4" for="email">Bank:</label>
                    <div class="col-sm-8">
                        @Html.DropDownListFor(o => o.bank_id, Model.bankList, new { @class = "form-control", @tabindex = "8" })
                        @*@Html.ValidationMessageFor(o => o.bank_id, "", new { @class = "text-error" })*@
                        <span class="text-error bankvalidation field-validation-error" style="display:none;" data-valmsg-replace="true"><span for="bank_validation" class="">Please select bank.</span></span>

                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <label class="control-label col-sm-4" for="email">
                        Cheque Number:
                    </label>
                    <div class="col-sm-8">
                        @Html.TextBoxFor(o => o.cheque_number, new { @class = "form-control", @tabindex = "9" })
                        <span class="text-error chequenumbervalidation field-validation-error" style="display:none;" data-valmsg-replace="true"><span for="cheque_number" class="">Please enter valid cheque number.</span></span>
                    </div>
                </div>
            </div>

        </div>

    </div>
    <div class="row" style="padding-right:20%">
        <div class="col-md-12" >
            <div class="form-group">
                <div class="row">
                    <label class="control-label col-sm-2" for="email">Remarks:</label>
                    <div class="col-sm-10">
                        @Html.TextAreaFor(o => o.remarks, new { @class = "form-control", @tabindex = "10" })
                    </div>
                </div>
            </div>

        </div>
    </div>

    <div style="display:none;">
        @Html.DropDownListFor(o => o.paymentdet_project_id, Model.projectList)
    </div>
    <div style="display:none;">
        @Html.DropDownListFor(o => o.paymentdet_GstPercentage, Model.GSTList)
    </div>

    <div class="row">

        <div class="col-md-12">
            <table class="table table-responsive table-striped table-bordered" style="overflow-x: visible; ">
                <thead>
                    <tr>
                        <th width="14%">Address/Site</th>
                        <th width="18%">Inv Remarks</th>
                        <th width="10%">Supplier Inv#</th>
                        <th width="10%">Budgeted Cost</th>
                        <th width="8%">Invoice Amt with GST</th>
                        <th width="7%">GST %</th>
                        <th width="10%">GST Amt</th>
                        <th width="10%">Approved Amount of Budget Cost</th>
                        <th width="10%">Payment Amt</th>
                        <th width="2%">
                            <a href="javascript:void(0);" onclick="AddNew();"><i class="fa fa-plus" style="color: #ffffff; font-size: 15px;" aria-hidden="true"></i></a>
                            <input type="hidden" id="maintainID" name="maintainID" value="@Model.payment_details.Count()" />
                        </th>
                    </tr>
                </thead>
                <tbody id="tblbody">
                </tbody>
            </table>
        </div>

        <div class="col-md-4">

        </div>
        <div class="col-md-1">

        </div>

        <div class="col-md-7 pull-right">

            <div class="form-group">
                <div class="row">
                    <input type="hidden" id="hdnInvoiceAmountAfterGST" name="hdnInvoiceAmountAfterGST" value="" />
                    <label class="control-label col-sm-8">Total Invoice Amount After GST:</label>
                    <div class="col-sm-4 text-right">
                        <b>$</b><label class="control-label" id="totalamount" style="padding-right:14%"></label>
                    </div>
                </div>
            </div>


            <div class="form-group">
                <div class="row">
                    <label class="control-label col-sm-8" for="email">Total Payment Amount:</label>
                    <div class="col-sm-4">
                        <input type="number" tabindex="11" id="txtTotalPaymentAmount" name="txtTotalPaymentAmount"
                               class="form-control amount"
                               @*onblur="CalculateRebateAfterTotalPaymentAmt()"
                                   onkeydown="CalculateRebateAfterTotalPaymentAmt()"
                                   onkeyup="CalculateRebateAfterTotalPaymentAmt()" *@
                               readonly />


                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <label class="control-label col-sm-8" for="email">Actual Payment Amount:</label>
                    <div class="col-sm-4">
                        <input type="number" tabindex="11" id="txtActualPaymentAmount" name="txtActualPaymentAmount"
                               onblur="CalculateRebateAfterTotalPaymentAmt()"
                               onkeydown="CalculateRebateAfterTotalPaymentAmt()"
                               onkeyup="CalculateRebateAfterTotalPaymentAmt()"
                               class="form-control amount" value="@Model.actual_payment_amount" required />
                        <div id="divActualPaymentAmountError" style="display:none;color: red"> Please enter amount.</div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <label class="control-label col-sm-8" for="email">Rebate Amount:</label>
                    <div class="col-sm-4 text-right">
                        @Html.TextBoxFor(o => o.rebate_amount, "{0:0.00}", new
                   {
                       @class = "form-control amount",
                       @tabindex = "12",
                       //onblur = "CalculateTotalAmtAfterDiscount()",
                       //onkeydown = "CalculateTotalAmtAfterDiscount()",
                       //onkeyup = "CalculateTotalAmtAfterDiscount()",
                       @readonly = "readonly" ,
                       @style = "padding-right: 12%"
                   })
                        @Html.ValidationMessageFor(o => o.rebate_amount, "", new { @class = "text-error" })
                    </div>
                </div>
            </div>

        </div>
        <div class="col-md-12">
            <table class="table table-responsive table-striped table-bordered">
                <thead>
                    <tr>
                        <th width="21%">Description</th>
                        <th width="15%">Amount</th>

                        <th width="3%">
                            <a href="javascript:void(0);" onclick="AddNewDescription();"><i class="more-less glyphicon glyphicon-plus" style="color:#ffffff;"></i></a>
                            <input type="hidden" id="maintainIDdesc" name="maintainIDdesc" value="@Model.payment_descriptions.Count()" />
                        </th>
                    </tr>
                </thead>
                <tbody id="tblbodyDescription">

                    @if (Model.payment_descriptions.Count == 0)
                    {
                        <tr class="trtableclass">
                            <input type="hidden" id="hdnDesc_id1" name="hdnDesc_id1" class="hdnDesc_id" />
                            <td><input id="txtDescription1" name="txtDescription1" class="txtDescription form-control" /></td>
                            <td><input id="txtAmount1" onblur="CalculateDescriptionAmount('1')" name="txtAmount1" class="txtAmount form-control amount" type='number' /></td>

                            <td>&nbsp;</td>
                        </tr>
                    }
                    else
                    {
                        int i = 1;
                        foreach (var pdlist in Model.payment_descriptions)
                        {

                            <tr class="trtableclass" id="trDesc@(i)">

                                @Html.HiddenFor(o => pdlist.descriptionID, new { @id = "hdnDesc_id" + i, @class = "hdnDesc_id" })
                                <td><input id="txtDescription@(i)" name="txtDescription@(i)" class="txtDescription form-control" value="@pdlist.description" /></td>
                                <td><input id="txtAmount@(i)" name="txtAmount@(i)" class="txtAmount form-control amount" value="@pdlist.amount" onblur="CalculateDescriptionAmount(@(i))" type='number' /></td>

                                <td>

                                    <a href='javascript:void(0);' onclick="RemoveElementDesc(@i, @((pdlist.descriptionID!=0)?pdlist.descriptionID:0))"><i class='more-less glyphicon glyphicon-minus' style='color:#ff0000;'></i></a>
                                </td>
                            </tr>
                            i = i + 1;
                        }


                    }
                </tbody>
            </table>

            <div class="form-group">
                <label class="control-label col-sm-4" for="email">
                    Note:
                </label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(o => o.Message, new { @class = "form-control", @tabindex = "9" })
                </div>
            </div>

        </div>

    </div>

    @Html.HiddenFor(o => o.isactive)
    @Html.HiddenFor(o => o.id)
    @Html.HiddenFor(o => o.created_date)
    @Html.HiddenFor(o => o.created_by)
    @*<input maxlength="1" />*@
    <input type="hidden" id="hdntotalamount" name="hdntotalamount" value="@Model.total_invoice_amount_after_gst" />
    <input type="hidden" id="hdnTotalPaymentAmount" name="hdnTotalPaymentAmount" value="@Model.total_payment_amount" />
    <input type="hidden" id="hdnActualPaymentAmount" name="hdnActualPaymentAmount" value="@Model.actual_payment_amount" />
    <input type="hidden" id="hdnrebate_amount" name="hdnrebate_amount" value="@Model.rebate_amount" />
    <input type="hidden" id="hdngst_percentage" name="hdnrebate_amount" value="@Convert.ToString(PMS.Common.SessionManagement.BranchGST)" />
    <input type="hidden" id="hdn_id" name="hdn_id" value="@Model.id" />
</form>
    
    <div class="modal-footer">
        @if (@Model.id != 0)
        {
            <button id="btnUpdateAndSMS" name="btnUpdateAndSMS" type="submit" class="btn btn-primary" onclick="SavePaymentForm('save');">Update & SMS</button>
            <button id="btnUpdateAndPrint" name="btnUpdateAndPrint" type="submit" class="btn btn-primary" onclick="SavePaymentForm('saveprint');">Update & Print</button>
        }
        else
        {
            <button id="btnSaveAndSMS" name="btnSaveAndSMS" type="submit" class="btn btn-primary" onclick="SavePaymentForm('save');">Save & SMS</button>
            <button id="btnSaveAndPrint" name="btnSaveAndPrint" type="submit" class="btn btn-primary" onclick="SavePaymentForm('saveprint');">Save & Print</button>
        }
        <button id="btnClearPayment" name="btnClearPayment" type="button" class="btn btn-secondary" onclick="LoadAddEdit(0);" >Clear</button>
    </div>
    <script>
    //if($("select[class='ddlsupplierinvnumberCls']").selectedIndex == 0)
    //{
    //    alert();
    //}
    var ElemArr = [];
    function supplierinvnumberDRP(cthis, rwId, modetyp) {
        debugger;
        //For Edit =1, Else =0
        if (modetyp == 0) {
            $("#supplier_inv_number" + rwId).val('');
        }


        var itemId = $("#dllsupplier_inv_number" + rwId + " option:selected").val();
        var itemtext = $("#dllsupplier_inv_number" + rwId + " option:selected").text();


        var ddlAddressSites = $(".ddlAddressSite");
        var i = 0, isFlag = false;
        $.each(ddlAddressSites, function () {
            debugger
            var numId = this.id.split('project_id')[1];
            var projectId = $('#' + this.id).val();
            var _projectId = $('#project_id' + numId).val()
            var _inv_number = $('#dllsupplier_inv_number' + numId).val()
            if (projectId == _projectId && itemId == _inv_number) {
                i++;
            }

            if (projectId == _projectId && itemId == _inv_number && i > 1) {
                isFlag = true;
            }
        });
        if (isFlag) {
            //$('#dllsupplier_inv_number' + rwId).val(0)
            //$("#dllsupplier_inv_number" + rwId).html('');
            $("#btnViewInvoice" + rwId).hide();
            ResetMultiSupplierTable(rwId);
            alert("Invoice already exists. Select another invoice.");
        }
        else {
            if (itemId == "") {
                itemtext = "";
            }
            else {
                $("#supplier_inv_number" + rwId).val(itemtext);
                $("#budgetedcost" + rwId).empty();
                $.ajax({
                    url: '/ProjectsBudget/getBudgetedCost',
                    type: "GET",
                    data: { Id: itemId },
                    success: function (data) {
                        debugger;
                        $("#budgetedcost" + rwId).html(data.data.Items.budget_amount);

                        if (modetyp == 0) {
                            $("#payment_amount" + rwId).val(data.data.Items.InvoiceAmtWithGST);
                            $("#invoice_amount" + rwId).val(data.data.Items.ApprovedAmount);
                            $("#payment_amt" + rwId).val(data.data.Items.ApprovedAmount);
                            var gstpercentagevalue = String($("#hdngst_percentage").val());
                            $('#gst_percentage' + rwId).val(gstpercentagevalue);
                            CalculateGSTTotalAmount(rwId);
                            CalculateTotalPaymentAmount();
                        }
                        $("#btnViewInvoice" + rwId).show();
                        if (itemId != "" || itemId != undefined) {
                            InvoiceFileByProjectBudgetDetailsId(itemId, rwId);

                        }
                    }
                });
            }

        }
    }

    function InvoiceFileByProjectBudgetDetailsId(itemId, rwId) {
        debugger
        var projectId = $("#project_id" + rwId).val();
        $.ajax({
            url: '@Url.Action("GetFilePathByProjectBudgetDetailsId", "ProjectsBudget")',
            type: "POST",
            data: { "ProjectId": projectId, "ProjectBudgetDetailsId": itemId },
            dataType: 'Json',
            success: function (result) {
                debugger
                if (result.data != "" && result.data != undefined) {
                    var path = window.location.origin + result.data;
                    $("#btnViewInvoice" + rwId).attr("href", path);
                }
                else {
                    $("#btnViewInvoice" + rwId).attr("href", "#");
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                $.loader('close');
                notify("Fail", "error");
                notify(jqXHR, "error");
            }
        });
        //e.data
        //var invoicepath = "http://localhost:5998/UploadDocuments/ProjectBudget/10597/282938439509_5.pdf";
        //printJS(invoicepath);
    }

    $(function () {
        debugger;
        DateRangePicker_PaymentDate();
        DateRangePicker_CollectionDate();
        var hdnId = $('#hdn_id').val();
        if (hdnId != null && hdnId != '' && hdnId > 0) {
            debugger;
            GetBudgetCostDetailsForEdit();
        }
        else {
            GetBudgetCostDetailsBySuppliierId();
        }

        debugger;

        var id = $('#id').val();
        var SupplierId = $("#SupplierId").val();
        if (parseInt(id) > 0) {
            $("#SupplierId").prop("disabled", true);
            $("#btnCreateSupplier").prop("disabled", true);
            $("#btnSaveAndSMS").html("Update & SMS");
            $("#btnSaveAndPrint").html("Update & Print");
        }

        if (String($("#maintainID").val()) == "0") {
            $("#maintainID").val("1");
        }
        $("#payment_date").datepicker({ changeMonth: true, changeYear: true, dateFormat: "dd/mm/yy" });
        $("#collection_date").datepicker({ changeMonth: true, changeYear: true, dateFormat: "dd/mm/yy" });
        $('#payment_date').removeAttr("data-val-date");
        $('#collection_date').removeAttr("data-val-date");
        $(".ddlproject_id").chosen();
        $(".ddlproject_id").width(260);
        if (parseInt(SupplierId) > 0) {
            debugger;
            $("#SupplierId").prop("disabled", true);
        }

        //debugger
        //if (parseInt(id) > 0) {
        //    var totalamount = $("#hdntotalamount").val();
        //    var totalPaymentAmount = $("#hdnTotalPaymentAmount").val();
        //    var actualPaymentAmount = $("#hdnActualPaymentAmount").val();
        //    var rebateAmount = $("#hdnrebate_amount").val();

        //    $('#hdntotalamount').val(totalamount);
        //    $('#hdntotalamount').text(totalamount);
        //    $('#hdnTotalPaymentAmount').val(totalPaymentAmount);
        //    $('#txtActualPaymentAmount').val(actualPaymentAmount);
        //    $('#rebate_amount').val(rebateAmount);
        //}
    });

    function DRPDWNsupplierinvnumberCls() {
        debugger;
        var supplier_inv_numberID = $(this).parent().parent(".trtableclass").find(".supplier_inv_number").attr("id");
        var ddlsuppliercontrolID = $(this).parent().parent(".trtableclass").find(".ddlsupplierinvnumberCls").attr("id");
        $("#" + supplier_inv_numberID).val('');
        var projectID = $(this).val();
        var supplierid = $('#SupplierId').val();
        $("#" + ddlsuppliercontrolID).empty();
        $.ajax({
            url: '/ProjectsBudget/getBudgetedInvoice',
            type: "GET",
            data: { projectId: projectID, supplierId: supplierid },
            success: function (data) {
                $("#" + ddlsuppliercontrolID).html(data);
            }
        });
    }

        function PaymentList() {
            debugger;
            window.location = '@Url.Action("", "Payments")';
        }
          function BudgetList() {
            debugger;
            window.location = '@Url.Action("", "ProjectsBudget")';
        }

        function LoadAddEdit(id) {
            window.location = '@Url.Action("LoadAddEdit", "Payments")?id=' + id + '&SupplierId=' + 0;
            //openModelpopup('/Payments/LoadAddEdit', 'id', 0, 'SupplierId', 0)
        }

    function GetInvoices() {
        debugger;
        var supplier_inv_numberID = $(".ddlAddressSite").attr("id");
        var ddlsuppliercontrolID = $(".ddlsupplierinvnumberCls").attr("id");
        var projectID = $("#hdn"+ supplier_inv_numberID).val();
        //var projectID = $("#hdnproject_id1").val();
        var supplierid = $('#SupplierId').val();
        if (projectID != null && supplierid != null) {
            $.ajax({
                url: '@Url.Action("getBudgetedInvoiceNew", "ProjectsBudget")?projectId=' + projectID + '&supplierId=' + supplierid,
                type: "GET",
                success: function (data) {
                    debugger
                    $("#" + ddlsuppliercontrolID).html(data);
                    var selectedInvoice = $('#hdn' + ddlsuppliercontrolID).val();
                    if (selectedInvoice == null || selectedInvoice == undefined) {
                        $("#" + ddlsuppliercontrolID).val("0");
                    } else {
                        $("#" + ddlsuppliercontrolID).val(selectedInvoice);
                    }

                    supplierinvnumberDRP(this, 1, 0);
                }
            });
        }
        else {
           $("#" + ddlsuppliercontrolID).val("0");
        }

    }

    function ChooseDropdown() {
        debugger;
        $(".ddlproject_id").chosen().change(function () {
            debugger;
            // var lblcontrolID = $(this).parent().parent(".trtableclass").find(".budgetedcostlbl").attr("id");
            var supplier_inv_numberID = $(this).parent().parent(".trtableclass").find(".supplier_inv_number").attr("id");
            var ddlsuppliercontrolID = $(this).parent().parent(".trtableclass").find(".ddlsupplierinvnumberCls").attr("id");
            $("#" + supplier_inv_numberID).val('');
            var projectID = $(this).val();
            var supplierid = $('#SupplierId').val();
            $("#" + ddlsuppliercontrolID).empty();
            $.ajax({
                //url: '/ProjectsBudget/getBudgetedInvoice',
                url: '@Url.Action("getBudgetedInvoiceNew", "ProjectsBudget")?projectId=' + projectID + '&supplierId=' + supplierid,
                type: "GET",
                //dataType: "json",
                //data: { projectId: projectID, supplierId: supplierid },
                success: function (data) {
                    $("#" + ddlsuppliercontrolID).html(data);
                }
            });


            //var projectID=$(this).val();
            //var supplierid=$("#supplier_id").val();
            //$("#" + lblcontrolID).empty();
            //$.ajax({
            //    url: '/ProjectsBudget/getBudgetedCost',
            //    type: "GET",
            //    data: {projectId: projectID, supplierId: supplierid},
            //    success: function (data) {
            //        $("#" + lblcontrolID).html(data);
            //    }
            //});





        });
    }


    //$(document).ready(function () {
    //    $('#project_id1_chosen a').css("width", "390");
    //    CalculateTotalAmtAfterDiscount();
    //});

    function AddNew() {
        debugger
        var projectDropDownHTML = String($("#paymentdet_project_id").html());
        var idval = $("#maintainID").val();
        var idnum = parseInt(idval) + 1;
        var addnewHtML = "";
        var DefaultGst = $("#hdngst_percentage").val();
        var gstpercentagevalue = String($("#paymentdet_GstPercentage").html());
            
        addnewHtML = "<tr class='trtableclass' id='tr" + idnum + "'>";
        addnewHtML = addnewHtML + "<td><select id='project_id_New" + idnum + "' name='project_id" + idnum + "' onchange='getSupplierInvoices(" + idnum + ")' class='ddlAddressSite form-control' readonly></select></td>";
        addnewHtML = addnewHtML + "<td><input  id='InvRemarks" + idnum + "' name='InvRemarks" + idnum + "' class='InvRemarks form-control'/></td>";
//addnewHtML = addnewHtML + "<td><div style='display: flex'><input id='supplier_inv_number" + idnum + "' type='hidden' name='supplier_inv_number" + idnum + "'  class='supplier_inv_number form-control' /><select id='dllsupplier_inv_number" + idnum
        //    + "' class='ddlsupplierinvnumberCls form-control'   onchange='supplierinvnumberDRP(this," + idnum + ",0)'></select><a id='btnViewInvoice" + idnum
        //    + "' style='display: none' role='button' target='_blank' class='k-button k-button-icontext view_icon k-grid-preview text-right' href='#'><span class='k-icon'></span ></a ></div></td>";
        ////addnewHtML = addnewHtML + "<td><input id='payment_amount" + idnum + "' onblur='CalculateTotalAmtAfterDiscount();' name='payment_amount" + idnum + "' class='payment_amount form-control amount' /></td>";
        //addnewHtML = addnewHtML + "<td><select id='project_id_New" + idnum + "' name='project_id" + idnum + "' onchange='getSupplierInvoices(" + idnum + ")' class='ddlAddressSite form-control'>" + projectDropDownHTML + "</select></td>";
        addnewHtML = addnewHtML + "<td><input  id='supplier_invoice_number" + idnum + "' name='supplier_invoice_number" + idnum + "' class='supplier_invoice_number form-control'/></td>";


        addnewHtML = addnewHtML + "<td><label id='budgetedcost" + idnum + "'  class='budgetedcostlbl lbltext'></label></td>";
        addnewHtML = addnewHtML + "<td><input id='invoice_amount" + idnum + "' name='invoice_amount" + idnum + "' class='invoice_amount form-control amount' type='number' onchange='CalculateGSTTotalAmount(" + idnum + ")' /></td>";

        addnewHtML = addnewHtML + "<td><select id='gst_percentage" + idnum + "' name='gst_percentage" + idnum + "' onchange='CalculateGSTTotalAmount(" + idnum + ")' class='gst_percentage form-control'>" + gstpercentagevalue + " </select></td>";
        addnewHtML = addnewHtML + "<td><input  id='gst_amount" + idnum + "' name='gst_amount" + idnum + "' class='gst_amount form-control amount' type='number' /></td>";
        addnewHtML = addnewHtML + "<td><input id='payment_amt" + idnum + "' name='payment_amt" + idnum + "' class='payment_amt form-control amount'  type='number' /></td>";
        addnewHtML = addnewHtML + "<td><input id='payment_amount" + idnum + "' name='payment_amount" + idnum + "' class='payment_amount form-control amount'  onchange='CalculateTotalPaymentAmount()''  type='number' /></td>";
        addnewHtML = addnewHtML + "<td><a href='javascript:void(0);' onclick='RemoveElement(" + idnum + ")'><i class='fa fa-minus' aria-hidden='true'></i></a></td></tr>";
        $("#tblbody").append(addnewHtML);
        addnewHtML = "";
        $("#maintainID").val(idnum);
        $(".gst_percentage").val(DefaultGst);
        idnum = "";
        $(".ddlproject_id").chosen();
        $(".ddlproject_id").width(260);
        //ChooseDropdown();
    }

    function AddNewDescription() {
        var idval = $("#maintainIDdesc").val();
        var idnum = parseInt(idval) + 1;
        var addnewHtML = "";

        addnewHtML = "<tr class='trtableclass' id='trDesc" + idnum + "'>";
        addnewHtML = addnewHtML + "<input type='hidden' id='hdnDesc_id" + idnum + "'name='hdnDesc_id" + idnum + "' class='hdnDesc_id'/>";
        addnewHtML = addnewHtML + "<td><input  id='txtDescription" + idnum + "' name='txtDescription" + idnum + "' class='form-control txtDescription' /></td>";
        addnewHtML = addnewHtML + "<td><input id='txtAmount" + idnum + "' name='txtAmount" + idnum + "' class='form-control amount txtAmount' onblur='CalculateDescriptionAmount(" + idnum + ");' type='number' /></td>";

        addnewHtML = addnewHtML + "<td><a href='javascript:void(0);' onclick='RemoveElementDesc(" + idnum + ")'><i class='more-less glyphicon glyphicon-minus' style='color:#ff0000;'></i></a></td></tr>";
        $("#tblbodyDescription").append(addnewHtML);
        addnewHtML = "";
        $("#maintainIDdesc").val(idnum);
        idnum = "";

        ChooseDropdown();
    }
    function RemoveElement(idnum) {
        $("#tr" + idnum).remove();
        CalculateTotalPaymentAmount();
        CalculateTotalInvoiceAmountAfterGST();
    }
    function RemoveElementDesc(idnum, Id) {
        debugger;
        if (Id != undefined) {
            ElemArr.push(Id);
        }
        $("#trDesc" + idnum).remove();
    }


    function CalculateGSTTotalAmount(idctrl) {
        //var camount = $("#invoice_amount"+ idctrl +"").val();
        //$("#total_amount" + idctrl + "").val(camount);
        //var gstp = $("#gst_percentage" + idctrl + "").val();
        //if (String(camount).length > 0 && String(gstp).length > 0) {
        //    var GST = parseFloat((camount * gstp) / 100).toFixed(2);
        //    $("#gst_amount" + idctrl + "").val(GST);
        //    var totalamt = (parseFloat(camount) + parseFloat(GST)).toFixed(2);
        //    $("#payment_amount" + idctrl + "").val(totalamt);
        //}
        debugger;
        var tolalamount = parseFloat($("#invoice_amount" + idctrl + "").val());

        var gPer = 0;
        if ($("#gst_percentage" + idctrl + "").val() > 0) {
            gPer = parseFloat($("#gst_percentage" + idctrl + "").val());
        }

        var gstp = parseFloat(gPer / 100) + 1;

        if (String(tolalamount).length > 0 && String(gstp).length > 0) {
            var CAmount = parseFloat(tolalamount / gstp).toFixed(2);
            var GST = parseFloat(tolalamount - CAmount).toFixed(2);
            if (String(CAmount) == "NaN") {
                CAmount = "0.00";
            }
            if (String(GST) == "NaN") {
                GST = "0.00";
            }
            $("#gst_amount" + idctrl + "").val(GST);
            debugger;
            $("#payment_amt" + idctrl + "").val(tolalamount);
            $("#payment_amount" + idctrl + "").val(tolalamount);
        }
        CalculateTotalPaymentAmount();
        CalculateTotalInvoiceAmountAfterGST();
    }

    function CalculateTotalPaymentAmount() {
        debugger
        var totalamount = 0;
        $(".payment_amount").each(function () {
            totalamount = (parseFloat(totalamount) + parseFloat($(this).val() == '' ? 0 : $(this).val()));
            totalamount = totalamount.toFixed(2);
        });
        if (String(totalamount) == "NaN") {
            totalamount = "0.00";
        } else {
            totalamount = String(parseFloat(totalamount).toFixed(2));
        }
        $("#txtTotalPaymentAmount").val(totalamount);
        CalculateRebateAfterTotalPaymentAmt();
    }

    function CalculateTotalInvoiceAmountAfterGST() {
        var invoiceamnt = 0;
        $(".invoice_amount").each(function () {
            invoiceamnt = (parseFloat(invoiceamnt) + parseFloat($(this).val()));
        });
        if (String(invoiceamnt) == "NaN") {
            invoiceamnt = "0.00";
        } else {
            invoiceamnt = String(parseFloat(invoiceamnt).toFixed(2));
        }
        $("#totalamount").text(invoiceamnt);
    }

    function CalculateTotalAmtAfterDiscount() {
        debugger;
        var totalamount = parseFloat($("#txtTotalPaymentAmount").val());
        var invoiceamnt = 0;
       // $("#totalamount").text();
        //$("#rebate_amount").val("");
       $("#txtTotalPaymentAmount").val("");
        $(".payment_amount").each(function () {
            invoiceamnt = (parseFloat(invoiceamnt) + parseFloat($(this).val())).toFixed(2);
        });
        $(".payment_amt").each(function () {
            totalamount = (parseFloat(totalamount) + parseFloat($(this).val()));
        });
        if (String(totalamount) == "NaN") {
            totalamount = "0.00";
        } else {
            totalamount = String(parseFloat(totalamount).toFixed(2));
        }

        //  if (rebatemode) {
        $("#totalamount").text(invoiceamnt);
        // }

        var disamt = parseFloat($("#rebate_amount").val());
        var calamt = 0;
        var showtotalamount = 0;
        if (disamt > 0) {
            showtotalamount = (parseFloat(totalamount) - parseFloat(disamt)).toFixed(2);
        } else {
            showtotalamount = totalamount;
        }



        //if ('@ViewBag.Mode' == "Add") {
            //$("#txtTotalPaymentAmount").val(showtotalamount);
        //}
        CalculateRebateAfterTotalPaymentAmt();

    }

    function CalculateRebateAfterTotalPaymentAmt() {

        debugger;
        //var TotalInvoiceAmountAfterGST = parseFloat($("#totalamount").text());
        var RebateAfterTotalPaymentAmt = parseFloat($("#rebate_amount").val());
        var TotalPaymentAmount = parseFloat($("#txtTotalPaymentAmount").val());
        var ActualPaymentAmount = parseFloat($("#txtActualPaymentAmount").val());


        var rebate_amount_after_cal = (parseFloat(TotalPaymentAmount) - parseFloat(ActualPaymentAmount)).toFixed(2)


        if (String(TotalPaymentAmount) == "NaN") {
            TotalPaymentAmount = "0.00";
        }

        if (String(rebate_amount_after_cal) == "NaN") {
            rebate_amount_after_cal = "0.00";
        }
        $("#txtTotalPaymentAmount").val(TotalPaymentAmount.toFixed(2));
        $("#rebate_amount").val(rebate_amount_after_cal);




    }

    function CalculateDescriptionAmount(idctrl) {
        var tolalamount = parseFloat($("#txtTotalPaymentAmount").val());

        var calculated_total_sum = 0;

        $("#tblbodyDescription .txtAmount").each(function () {
            var get_textbox_value = $(this).val();
            if ($.isNumeric(get_textbox_value)) {
                calculated_total_sum += parseFloat(get_textbox_value);
            }
        });
        if (calculated_total_sum > tolalamount) {
            alert('Amount can not be more than total amount !');
            $("#txtAmount" + idctrl + "").val('');
        }
    }

    function getSupplierInvoices(Id) {
        debugger
        var addressSiteId = 'project_id_New' + Id;
        //var supplierInvoiceNumberIndex = addressSiteId.split('project_id')[1];
        var supplierInvoiceNumberId = 'dllsupplier_inv_number' + Id;
        var projectID = $("#" + addressSiteId).val();
        var supplierid = $("#supplier_id").val();

        $.ajax({
                url: '@Url.Action("getBudgetedInvoiceNew", "ProjectsBudget")?projectId=' + projectID + '&supplierId=' + supplierid,
                type: "GET",
                success: function (data) {
                    $("#" + supplierInvoiceNumberId).html(data);
                    $("#btnViewInvoice" + Id).hide();
                    ResetMultiSupplierTable(Id);
                }
            });
    }

    function ResetMultiSupplierTable(Id) {
        $('#dllsupplier_inv_number' + Id).val(0);
        $('#budgetedcost' + Id).empty();
        $('#budgetedcost' + Id).text('');
        $('#payment_amount' + Id).val('');
        $('#gst_percentage' + Id).val('');
        $('#gst_amount' + Id).val('');
        $('#invoice_amount' + Id).val('');
        $('#payment_amt' + Id).val('');
    }

    $('#SupplierId').on('change', function () {
        debugger;
        GetBudgetCostDetailsBySuppliierId();
        //GetAddressSiteBySupplierId();
    });

    function GetAddressSiteBySupplierId() {
        debugger
        var supplierid = $('#SupplierId').val();
        $.ajax({
					url: '@Url.Action("GetAddressBySalemanId", "Payments")',
					type: "POST",
					dataType: "json",
                    data: { Supplier_id: supplierid },
					success: function (result) {
                        debugger;
                        $('.ddlAddressSite').empty();

                        $.each(result.data, function () {
                            $('.ddlAddressSite').append($("<option     />").val(this.Value).text(this.Text));
                        });
                        var ddlAddressSites = $('.ddlAddressSite');
                        $.each(ddlAddressSites, function () {
                            var numId = this.id.split('project_id')[1];
                            var selectedAddressSite = this.Value;
                            if (selectedAddressSite == null || selectedAddressSite == undefined) {
                                $('#'+ this.id).val("0");
                            }
                            else {
                                $('#' + this.id).val(selectedAddressSite);
                            }
                            $('#paymentdet_project_id').html($('#' + this.id).html());
                            $("#dllsupplier_inv_number" + numId).html('');
                            $("#btnViewInvoice" + numId).hide();
                            ResetMultiSupplierTable(numId);
                            GetInvoicesBySupplierInvNumberId(numId);
                            var Id = $('#id').val();
                            if (parseInt(Id) == 0 && parseInt($("#tblbody tr").length) > 1) {
                                $("#tblbody tr").slice(-(parseInt($("#tblbody tr").length - 1))).remove();
                            }
                        });

                        //var selectedAddressSite = $("#hdn" + $('.ddlAddressSite').attr("id")).val();
                        //if (selectedAddressSite == null || selectedAddressSite == undefined) {
                        //    $('.ddlAddressSite').val("0");
                        //}
                        //else {
                        //    $('.ddlAddressSite').val(selectedAddressSite);
                        //}

                        //$('#paymentdet_project_id').html($(".ddlAddressSite").html());
                        //$('#btnViewInvoice').css('display', 'block');
					},
					error: function (result) {
						//debugger

            },
                    complete: function (result) {
                         //if (parseInt(id) > 0) {
                        //    var totalamount = $("#hdntotalamount").val();
                        //    var totalPaymentAmount = $("#hdnTotalPaymentAmount").val();
                        //    var actualPaymentAmount = $("#hdnActualPaymentAmount").val();
                        //    var rebateAmount = $("#hdnrebate_amount").val();

                        //    $('#hdntotalamount').val(totalamount);
                        //    $('#hdntotalamount').text(totalamount);
                        //    $('#hdnTotalPaymentAmount').val(totalPaymentAmount);
                        //    $('#txtActualPaymentAmount').val(actualPaymentAmount);
                        //    $('#rebate_amount').val(rebateAmount);
                        //}
                    }
				});
    }

    function GetInvoicesBySupplierInvNumberId(numId) {
        debugger;
        var ddlsuppliercontrolID = 'dllsupplier_inv_number' + numId;
        var projectID = $("#hdnproject_id" + numId).val();
        var supplierid = $('#SupplierId').val();
        if (projectID != null && supplierid != null) {
            $.ajax({
                url: '@Url.Action("getBudgetedInvoiceNew", "ProjectsBudget")?projectId=' + projectID + '&supplierId=' + supplierid,
                type: "GET",
                success: function (data) {
                    debugger
                    $("#" + ddlsuppliercontrolID).html(data);
                    var selectedInvoice = $('#hdn' + ddlsuppliercontrolID).val();
                    if (selectedInvoice == null || selectedInvoice == undefined) {
                        $("#" + ddlsuppliercontrolID).val("0");
                    } else {
                        $("#" + ddlsuppliercontrolID).val(selectedInvoice);
                    }

                    supplierinvnumberDRP(this, numId, 0);
                }
            });
        }
        else {
           $("#" + ddlsuppliercontrolID).val("0");
        }

    }

    function GetBudgetCostDetailsBySuppliierId() {
        debugger;
        var supplierid = $('#SupplierId').val();
        $.ajax({
            url: '@Url.Action("GetBudgetCostDetailsBySupplierId", "Payments")',
            type: "POST",
            dataType: "json",
            data: { Supplier_id: supplierid },
            success: function (result) {
                debugger;
                $("#tblbody").html('');
                $.each(result.data, function (key, res) {
                    var idnum = key;
                    var addnewHtML = "";
                    addnewHtML = "<tr class='trtableclass' id='tr" + idnum + "'>";
                    addnewHtML = addnewHtML + "<td><input id='project_id" + idnum + "' name='project_id_text" + idnum + "' value='" + res.Text + "' class='form-control' readonly /><input type='hidden' id='project_id" + idnum + "' name='project_id" + idnum + "' value='" + res.Value + "' class='ddlAddressSite' /></td>";
                    addnewHtML = addnewHtML + "<td><input id='InvRemarks" + idnum + "' name='InvRemarks" + idnum + "' value='" + res.InvRemarks + "' class='form-control'/>";
                    addnewHtML = addnewHtML + "<td><div style='display: flex'><input id='supplier_invoice_number" + idnum + "' name='supplier_invoice_number" + idnum + "' value='" + res.invoiceNumber + "' class='supplier_invoice_number form-control' readonly /><a id='btnViewInvoice" + idnum
                        + "' role='button' target='_blank' class='k-button k-button-icontext view_icon k-grid-preview text-right' href='#'><span class='k-icon'></span ></a ></div></td>";
                    addnewHtML = addnewHtML + "<td><label id='budgetedcost" + idnum + "'  class='budgetedcostlbl lbltext'>" + res.InvoiceAmtWithGST.toFixed(2) + "</label></td>";
                    addnewHtML = addnewHtML + "<td><input id='invoice_amount" + idnum + "' name='invoice_amount" + idnum + "' value='" + res.InvoiceAmtWithGST.toFixed(2) + "' class='invoice_amount form-control amount' type='number' readonly /></td>";

                    addnewHtML = addnewHtML + "<td><input id='gst_percentage" + idnum + "' name='gst_percentage" + idnum + "' value='" + res.GSTPercent.toFixed(0) + "' class='gst_percentage form-control amount' readonly /></td>";
                    addnewHtML = addnewHtML + "<td><input  id='gst_amount" + idnum + "' name='gst_amount" + idnum + "' value='" + res.GSTAmount.toFixed(2) + "' class='gst_amount form-control amount' readonly /></td>";
                    addnewHtML = addnewHtML + "<td><input id='payment_amt" + idnum + "' name='payment_amt" + idnum + "' value='" + res.ApprovedAmount.toFixed(2) + "' class='payment_amt form-control amount' readonly /></td>";
                    addnewHtML = addnewHtML + "<td><input id='payment_amount" + idnum + "' name='payment_amount" + idnum + "' value='" + res.ApprovedAmount.toFixed(2) + "' class='payment_amount form-control amount' readonly onchange='CalculateTotalPaymentAmount()'' /></td>";
                    addnewHtML = addnewHtML + "<td><a href='javascript:void(0);' onclick='RemoveElement(" + idnum + ")'><i class='fa fa-minus' aria-hidden='true'></i></a></td></tr>";
                    $("#tblbody").append(addnewHtML);
                    addnewHtML = "";
                    debugger;
                    $("#maintainID").val(idnum);
                    if (res.document_path != null && res != "") {
                        var path = window.location.origin + res.document_path;
                        $("#btnViewInvoice" + idnum).attr("href", path);
                    }
                    else {
                        $("#btnViewInvoice" + idnum).attr("href", "#");
                    }


                    CalculateTotalPaymentAmount();
                    CalculateTotalInvoiceAmountAfterGST();
                });
            },
            error: function (result) {
                //debugger

            },
            complete: function (result) {

            }
        });
    }

    function GetBudgetCostDetailsForEdit() {
        var payment_Id = $('#hdn_id').val();
        $.ajax({
            url: '@Url.Action("GetBudgetCostDetailsForEdit", "Payments")',
            type: "POST",
            dataType: "json",
            data: { payment_Id: payment_Id },
            success: function (result) {
                debugger;
                $("#tblbody").html('');
                $.each(result.data, function (key, res) {
                    var idnum = key;
                    var addnewHtML = "";
                    addnewHtML = "<tr class='trtableclass' id='tr" + idnum + "'>";
                    addnewHtML = addnewHtML + "<td><input id='project_id" + idnum + "' name='project_id_text" + idnum + "' value='" + res.Text + "' class='form-control' readonly /><input type='hidden' id='project_id" + idnum + "' name='project_id" + idnum + "' value='" + res.Value + "' class='ddlAddressSite' /></td>";
                    addnewHtML = addnewHtML + "<td><input id='InvRemarks" + idnum + "' name='InvRemarks" + idnum + "' value='" + res.InvRemarks + "' class='InvRemarks form-control'/>";
                    addnewHtML = addnewHtML + "<td><div style='display: flex'><input id='supplier_invoice_number" + idnum + "' name='supplier_invoice_number" + idnum + "' value='" + res.invoiceNumber + "' class='supplier_invoice_number form-control' readonly /><a id='btnViewInvoice" + idnum
                        + "' role='button' target='_blank' class='k-button k-button-icontext view_icon k-grid-preview text-right' href='#'><span class='k-icon'></span ></a ></div></td>";
                    addnewHtML = addnewHtML + "<td><label id='budgetedcost" + idnum + "'  class='budgetedcostlbl lbltext'>" + res.InvoiceAmtWithGST.toFixed(2) + "</label></td>";
                    addnewHtML = addnewHtML + "<td><input id='invoice_amount" + idnum + "' name='invoice_amount" + idnum + "' value='" + res.InvoiceAmtWithGST.toFixed(2) + "' class='invoice_amount form-control amount' type='number' readonly /></td>";

                    addnewHtML = addnewHtML + "<td><input id='gst_percentage" + idnum + "' name='gst_percentage" + idnum + "' value='" + res.GSTPercent.toFixed(0) + "' class='gst_percentage form-control amount' readonly /></td>";
                    addnewHtML = addnewHtML + "<td><input  id='gst_amount" + idnum + "' name='gst_amount" + idnum + "' value='" + res.GSTAmount.toFixed(2) + "' class='gst_amount form-control amount' readonly /></td>";
                    addnewHtML = addnewHtML + "<td><input id='payment_amt" + idnum + "' name='payment_amt" + idnum + "' value='" + res.ApprovedAmount.toFixed(2) + "' class='payment_amt form-control amount' readonly /></td>";
                    addnewHtML = addnewHtML + "<td><input id='payment_amount" + idnum + "' name='payment_amount" + idnum + "' value='" + res.PaymentAmount.toFixed(2) + "' class='payment_amount form-control amount' readonly onchange='CalculateTotalPaymentAmount()'' /></td>";
                    addnewHtML = addnewHtML + "<td><a href='javascript:void(0);' onclick='RemoveElement(" + idnum + ")'><i class='fa fa-minus' aria-hidden='true'></i></a></td></tr>";
                    $("#tblbody").append(addnewHtML);
                    addnewHtML = "";
                    $("#maintainID").val(idnum);
                    if (res.document_path != null && res != "") {
                        var path = window.location.origin + res.document_path;
                        $("#btnViewInvoice" + idnum).attr("href", path);
                    }
                    else {
                        $("#btnViewInvoice" + idnum).attr("href", "#");
                    }


                    CalculateTotalPaymentAmount();
                    CalculateTotalInvoiceAmountAfterGST();
                });
            },
            error: function (result) {
                //debugger

            },
            complete: function (result) {

            }
        });
    }

     function SavePaymentForm(actiontype) {
        debugger;
        var chval = false;
        if (String($("#payment_mode").val()) == "4" && $("#cheque_number").val() == "" && ($("#bank_id").val() == "" || $("#bank_id").val() == "0")) {
            $(".chequenumbervalidation").show();
            $(".bankvalidation").show();
            chval = true;
        }
        else if (String($("#payment_mode").val()) == "4" && $("#cheque_number").val() == "") {
            $(".chequenumbervalidation").show();
            $(".bankvalidation").hide();
            chval = true;
        } else if (String($("#payment_mode").val()) == "4" && ($("#bank_id").val() == "" || $("#bank_id").val() == "0")) {
            $(".bankvalidation").show();
            $(".chequenumbervalidation").hide();
            chval = true;
        }
        else if ($("#cheque_number").val() != "") {
            debugger;
            if (isFinite(parseInt($("#cheque_number").val())) == false) {
                $(".chequenumbervalidation").show();
                chval = true;
            }
        }
        else {
            chval = false;
            $(".chequenumbervalidation").hide();
            $(".bankvalidation").hide();
        }

        if ($('#txtActualPaymentAmount').val() == null || $('#txtActualPaymentAmount').val() == undefined || $('#txtActualPaymentAmount').val() == "") {
            $('#divActualPaymentAmountError').show();
        }
        var form = $('#frmPayment');

        $.validator.unobtrusive.parse(form);
        if (form.valid() && chval == false) {
            var jsonData = {
                id: $('#frmPayment').find("#id").val(),
                payment_date: $('#date_range').data('daterangepicker').startDate,
                supplier_id: $('#frmPayment').find("#SupplierId").val(),
                cheque_number: $('#frmPayment').find("#cheque_number").val(),
                isactive: $('#frmPayment').find("#isactive").val(),
                payment_mode: $('#frmPayment').find("#payment_mode").val(),
                bank_id: $('#frmPayment').find("#bank_id").val(),
                rebate_amount: $('#frmPayment').find("#rebate_amount").val(),
                total_payment_amount: $('#frmPayment').find("#txtTotalPaymentAmount").val(),
                actual_payment_amount: $('#frmPayment').find("#txtActualPaymentAmount").val(),
                remarks: $('#frmPayment').find("#remarks").val(),
                collection_date: $('#date_range_CollectionDate').data('daterangepicker').startDate,
                description: $('#frmPayment').find("#txtDescription").val(),
                amount: $('#frmPayment').find("#txtAmount1").val(),
                descriptionID: $('#frmPayment').find("#hdnDesc_id").val(),
                Message: $('#frmPayment').find("#Message").val(),
                payment_details: [],
                payment_description: []
            };
            debugger;
            $("#tblbody tr").each(function () {
                debugger;
                var ddlproject_val = $(this).find(".ddlAddressSite").val();
                if (ddlproject_val == "" || ddlproject_val == undefined || ddlproject_val == null)
                    ddlproject_val = "0";
                var invoice_amount_val = $(this).find(".invoice_amount").val();
                var gst_percentage_val = $(this).find(".gst_percentage").val();
                var gst_amount_val = $(this).find(".gst_amount").val();
                var payment_amount_val = $(this).find(".payment_amount").val();
                var agreed_amount_val = $(this).find(".payment_amt").val();
                var supplier_inv_number_text = $(this).find(".supplier_invoice_number").val();
                var supplier_inv_number_val = $(this).find(".supplier_invoice_number").val();
                var InvRemarks = $(this).find(".InvRemarks").val();
                jsonData.payment_details.push({
                    project_id: ddlproject_val,
                    invoice_amount: invoice_amount_val,
                    gst_percentage: gst_percentage_val,
                    gst_amount: gst_amount_val,
                    payment_amount: payment_amount_val,
                    supplier_inv_number: supplier_inv_number_val,
                    supplier_inv_number_text: supplier_inv_number_text,
                    agreed_amount: agreed_amount_val,
                    InvRemarks: InvRemarks
                });

            });


            if (jsonData.payment_details.length == 0 || jsonData.payment_details[0] == null || jsonData.payment_details[0].supplier_inv_number == '' ||
                jsonData.payment_details[0].supplier_inv_number == undefined || jsonData.payment_details[0].supplier_inv_number == null) {
                notify("Please add atleast one payment", "error");
            } else {

                $("#tblbodyDescription tr").each(function () {
                    var desc_val = $(this).find(".txtDescription").val();
                    var amount_val = $(this).find(".txtAmount").val();
                    var id_val = $(this).find(".hdnDesc_id").val();
                    jsonData.payment_description.push({
                        description: desc_val,
                        amount: amount_val,
                        descriptionID: id_val
                    });
                });

                var jsonDatachkExisting = {
                    id: $('#frmPayment').find("#id").val(),
                    supplier_id: $('#frmPayment').find("#SupplierId").val(),
                    // project_id: $('#frmPayment').find("#project_id").val(),
                    payment_details_chk_Existing: []
                };

                if (parseInt($('#id').val()) > 0) {
                    $("#tblbody tr").each(function () {
                        //var supplier_inv_number_val = $(this).find(".supplier_inv_number").val();
                        var supplier_inv_number_val = $(this).find(".ddlsupplierinvnumberCls").val();
                        //var project_id_val = $(this).find(".ddlproject_id").val();
                        var project_id_val = $(this).find(".ddlAddressSite").val();
                        jsonDatachkExisting.payment_details_chk_Existing.push({
                            supplier_inv_number: supplier_inv_number_val,
                            project_id: project_id_val,
                        });
                    });
                }

                var paymentReturnID = "";
                $.loader({ content: "<img src='/Content/img/Preloader_3.gif' />" });

                var AddNewRecord = false;
                $.ajax({
                    type: "POST",
                    //url: "/Payments/CheckExistingPayment", // the URL of the controller action method
                    url: '@Url.Action("CheckExistingPayment", "Payments")',
                    data: "payobjchkExist=" + JSON.stringify(jsonDatachkExisting), // optional data
                    success: function (result) {
                        $.loader('close');
                        if (result != "0") {
                            if (confirm("There is a payment for this supplier in this project, do you want to add another payment?")) {
                                AddNewRecord = true;
                            }
                        } else {
                            AddNewRecord = true;
                        }
                        console.log(jsonData);
                        if (AddNewRecord == true) {
                            $.loader({ content: "<img src='/Content/img/Preloader_3.gif' />" });
                            debugger;
                            $.ajax({
                                type: "POST",
                                url: '@Url.Action("SaveUpdate", "Payments")',
                                //url: "/Payments/SaveUpdate", // the URL of the controller action method
                                data: "paymentobj=" + JSON.stringify(jsonData), // optional data
                                success: function (result) {
                                    debugger;
                                    if (jsonData.payment_description.length ==0 && ElemArr.length >0 && result.cls == "success") {
                                        $.ajax({
                                            type: "POST",
                                            url: "/Payments/DeleteDescription",
                                            data: { DescId: ElemArr},
                                            success: function (result) {
                                                debugger;
                                            },
                                            error: function (result) {
                                                debugger;
                                            }
                                        });
                                    }
                                    $.loader('close');
                                    if (result.cls == "error") {
                                        notify(result.msg, result.cls);
                                    } else {
                                        // $("#btnClosePayment").click();
                                        // loadGrid();
                                        paymentReturnID = String(result.id);
                                        // notify(result.msg, result.cls);
                                        if (actiontype == "save")
                                            openModelpop('/Payments/LoadSMS', 'collectionDate', $('#frmPayment').find("#collection_date").val());
                                        //$("#btnClose").click();
                                        //loadGrid();

                                        notify(result.msg, result.cls);

                                    }
                                },
                                error: function (req, status, error) {
                                    // do something with error
                                    $.loader('close');
                                    notify(error, "error");
                                }
                            }).done(function () {
                                debugger;
                                if (actiontype == "saveprint" && paymentReturnID != "") {
                                    setTimeout(function () {

                                        openModelpop('/Payments/PrintPreview', 'id', paymentReturnID);
                                    }, 600);

                                }
                            });
                        }
                    },
                    error: function (req, status, error) {
                        $.loader('close');
                        notify(error, "error");
                    }
                });

            }

        }
        }
        function DateRangePicker_PaymentDate() {
            $('#date_range + .input-group-append').click(function () {
                $('#date_range').trigger("focus");
            });

            $('#date_range').daterangepicker({
                "singleDatePicker": true,
                "autoUpdateInput": true,
                "autoApply": true,
                locale: {
                    format: 'DD/MM/YYYY',
                    cancelLabel: 'Clear'
                },

                "alwaysShowCalendars": true,
            });

            $('#date_range').on('apply.daterangepicker', function (ev, picker) {
                $(this).val(picker.startDate.format('DD/MM/YYYY'));
            });

            $('#date_range').on('cancel.daterangepicker', function (ev, picker) {
                $(this).val('');

            });
        }
        function DateRangePicker_CollectionDate() {
            $('#date_range_CollectionDate + .input-group-append').click(function () {
                $('#date_range_CollectionDate').trigger("focus");
            });

            $('#date_range_CollectionDate').daterangepicker({
                "singleDatePicker": true,
                "autoUpdateInput": true,
                "autoApply": true,
                locale: {
                    format: 'DD/MM/YYYY',
                    cancelLabel: 'Clear'
                },

                "alwaysShowCalendars": true,
            });

            $('#date_range_CollectionDate').on('apply.daterangepicker', function (ev, picker) {
                $(this).val(picker.startDate.format('DD/MM/YYYY'));
            });

            $('#date_range_CollectionDate').on('cancel.daterangepicker', function (ev, picker) {
                $(this).val('');

            });
        }

        function ShowSupplierModel(obj) {
            debugger;
            $("#ModelForm").html("");
            $.loader({ content: "<img src='/Content/img/Preloader_3.gif' />" });

            $.ajax({
                type: "POST",
                url: "/Supplier/LoadAddEdit", // the URL of the controller action method
                data: {
                    Id: obj
                }, // optional data
                success: function (result) {
                    $("#ModelForm").html(result);
                    $.loader('close');
                },
                error: function (req, status, error) {
                    // do something with error
                }
            });
            $("#myModal").modal('show');
        }

        function SaveForm() {

            var form = $('#frmSupplier');
            $.validator.unobtrusive.parse(form);
            if (form.valid()) {

                $.loader({ content: "<img src='/Content/img/Preloader_3.gif' />" });
                $.ajax({
                    type: "POST",
                    url: "/Supplier/SaveUpdate", // the URL of the controller action method
                    data: {
                        id: $('#frmSupplier').find("#id").val(),
                        supplier_name: $('#frmSupplier').find("#supplier_name").val(),
                        address1: $('#frmSupplier').find("#address1").val(),
                        address2: $('#frmSupplier').find("#address2").val(),
                        address3: $('#frmSupplier').find("#address3").val(),
                        address4: $('#frmSupplier').find("#address4").val(),
                        zip_code: $('#frmSupplier').find("#zip_code").val(),
                        website: $('#frmSupplier').find("#website").val(),
                        contact_person: $('#frmSupplier').find("#contact_person").val(),
                        nric_no: $('#frmSupplier').find("#nric_no").val(),
                        email: $('#frmSupplier').find("#email").val(),
                        phone: $('#frmSupplier').find("#phone").val(),
                        mobile: $('#frmSupplier').find("#mobile").val(),
                        gst_registered: $('#frmSupplier').find("#gst_registered").val(),
                        gst_no: $('#frmSupplier').find("#gst_no").val(),
                        isactive: $('#frmSupplier').find("#isactive").val()
                    }, // optional data
                    success: function (result) {
                        $.loader('close');
                        if (result.cls == "error") {
                            notify(result.msg, result.cls);
                        }
                        else {
                            $("#btnClose").click();
                            FillPaymentDropdown(result.id);

                        }
                    },
                    error: function (req, status, error) {
                        // do something with error
                    }
                });
            }
        }

        function AddSupplier() {
            //debugger;
            openModelpop('/Supplier/LoadAddEdit', 'id', 0);
        }

        function FillPaymentDropdown(obj) {
            $("#SupplierId").html("");
            var options = $("#SupplierId");
            $.getJSON("/Home/GetSupplierList/", function (response) {
                $.each(response, function () {
                    options.append($("<option />").val(this.Value).text(this.Text));
                });
                $("#SupplierId").val(obj);
            });
        }

    </script>


    <style>
        .chosen-container {
            width: 175px !important;
        }

        .lbltext {
            display: block;
            width: 100%;
            height: 34px;
            padding: 4px 12px;
            font-size: 14px;
            line-height: 1.42857143;
            color: #555;
            /* background-color: #fff; */
            background-image: none;
            border: 0px solid #ccc;
            border-radius: 4px;
        }

        .payment_amount_width {
            width: 105px !important;
        }
    </style>
