
@{
    ViewBag.Title = "PropertyType";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="panel box-shadow-none content-header">
    <div class="panel-body">
        <div class="col-md-6">
            <h3 class="animated fadeInLeft text-primary">Property Type List</h3>
        </div>
    </div>
</div>
<div class="row mx-3">
    <div class="col-md-12">
        <div class="responsive-table">
            <div id="PropertyTypegrid"></div>
        </div>
    </div>
</div>

<script>

    $(document).ready(function () {
        kendo.ui.Grid.fn.onAddClearFilter = function () {
            debugger
            var grid = this;
            grid.wrapper.find(".k-grid-add").on("click", function (e) {
                //console.log('onaddclearfilter');
                //send to first page if it's not already
                if (grid.pager) grid.pager.page(1);
                //clear the filter
                if (grid.dataSource) grid.dataSource.filter([]);
            });
        }
                    dataSource = new kendo.data.DataSource({
                        transport: {
                             read: function (options) {
                                $.ajax({
                                    url: '@Url.Action("PropertyTypeList", "Master")',
                                    type: "GET",
                                    dataType: "json",
                                    success: function (result) {
                                        debugger
                                        options.success(result);
                                    },
                                    error: function (result) {
                                        debugger
                                        options.error(result);
                                    }
                                });
                            },
                            create: function (options) {
                                debugger
                                $.ajax({
                                     url: '@Url.Action("CrudPropertyType", "Master")',
                                    type: "POST",
                                    dataType: "json",
                                    data: { JsonItems: JSON.stringify(options.data.models[0]),mode : "Insert" },
                                    success: function (result) {
                                        debugger
                                        $("#PropertyTypegrid").data('kendoGrid').dataSource.read();
                                        $("#PropertyTypegrid").data('kendoGrid').refresh();
                                        if (result.data.Result > 0) {
                                            notify(result.data.Errormessage, "success");
                                        }
                                        else {
                                            notify(result.data.Errormessage, "error");
                                        }
                                        options.success(result);
                                    },
                                    error: function (result) {
                                        debugger
                                        options.error(result);//result
                                    }
                                });
                            },
                           update: function (options) {
                                debugger
                                $.ajax({
                                     url: '@Url.Action("CrudPropertyType", "Master")',
                                    type: "POST",
                                    dataType: "json",
                                    data: { JsonItems: JSON.stringify(options.data.models[0]),mode : "Update" },
                                    success: function (result) {
                                        debugger
                                        $("#PropertyTypegrid").data('kendoGrid').dataSource.read();
                                        $("#PropertyTypegrid").data('kendoGrid').refresh();
                                        if (result.data.Result > 0) {
                                            notify(result.data.Errormessage, "success");
                                        }
                                        else {
                                            notify(result.data.Errormessage, "error");
                                        }
                                        options.success(result);
                                    },
                                    error: function (result) {
                                        debugger
                                        options.error(result);
                                    }
                                });
                                //to clear filter
                                clearAllFilters();
                            },
                              destroy: function (options) {
                                  debugger
                                  var propertyType_Id = options.data.models[0].PropertyType_Id;
                                $.ajax({
                                    url: '@Url.Action("CrudPropertyType", "Master")',
                                    type: "POST",
                                    dataType: "json",
                                    data: { JsonItems: JSON.stringify(options.data.models[0]), mode: "Delete" },
                                    success: function (result) {
                                        debugger
                                        $("#PropertyTypegrid").data('kendoGrid').dataSource.read();
                                        $("#PropertyTypegrid").data('kendoGrid').refresh();
                                        if (result.data.Result > 0) {
                                            notify(result.data.Errormessage, "success");

                                        }
                                        else {
                                            notify(result.data.Errormessage, "error");
                                        }

                                        options.success(result);
                                    },
                                    error: function (result) {
                                        debugger
                                        options.error(result);
                                    }
                                });
                                 //to clear filter
                                 clearAllFilters();
                            },
                            @*destroy: {
                                 url: '@Url.Action("DeleteItem", "Master")',
                                        type: "POST",
                                dataType: "json",
                                complete: function (e) {

                                    $("#Itemgrid").data("kendoGrid").dataSource.read();
                                    $("#Itemgrid").data('kendoGrid').refresh();
                                }
                            },*@
                            @*read: {
                                 url: '@Url.Action("ItemList", "Master")',
                                        type: "GET",
                                        dataType: "json"
                            },
                            update: {
                               url: '@Url.Action("CreateItem", "Master")',
                                        type: "POST",
                                        dataType: "json",
                                complete: function (e) {
                                    $("#Itemgrid").data("kendoGrid").dataSource.read();
                                }
                            },
                            destroy: {
                                 url: '@Url.Action("DeleteItem", "Master")',
                                        type: "POST",
                                        dataType: "json",
                                complete: function (e) {
                                    $("#Itemgrid").data("kendoGrid").dataSource.read();
                                }
                            },
                            create: {
                                url: '@Url.Action("CreateItem", "Master")',
                                        type: "POST",
                                        dataType: "json",
                                complete: function (e) {
                                    $("#Itemgrid").data("kendoGrid").dataSource.read();
                                }
                            },*@
                            parameterMap: function (options, operation) {
                                if (operation !== "read" && options.models) {
                                    return { models: kendo.stringify(options.models) };
                                }
                            }
                        },

                        batch: true,
                        pageSize: 15,
                        schema: {
                            data: "data.ElectricType", total: "data.TotalCount",
                            model: {
                                id: "PropertyType_Id",
                                fields: {
                                    PropertyType_Id: { editable: false, nullable: true, type: "number" },
                                    Property_Type: { nullable: true, maxlength: 100 },
                                    PropertyType_Code: { nullable: true, maxlength:100 },
                                    PropertyType_Desc: { nullable: true, maxlength: 100 },
                                    Markup_Percentage: { validation: { required: true, min: 0, maxlength: 20 }, type: "number", defaultValue: 10 },
                                    //uom_description: { validation: { required: true } },
                                    Is_Active: { validation: { required: true }, defaultValue: true },
                                }
                            }
                        },

                    });

        var PropertyTypegrid = $("#PropertyTypegrid").kendoGrid({
                    dataSource: dataSource,
               navigatable: true,
               dataBound: function (e) {
                   $('.k-grid-add').unbind("click");
               },
                    pageable: true,
               toolbar: [{ name: "create", text: "Add New PropertyType" }, { name: "excel", text: "Export to Excel " }, { name: "search" }, { template: '   <a type="button" class="k-button" onclick="return  clearAllFilters()" style="float:right" >Clear All Filters</a>' }],
               excel: {
                   fileName: "PropertyType List.xlsx",
                   allPages: true,
               },
               //Nithin Added For Filter Ascending Order
               filterMenuInit: function (e) {
                   debugger
                   if (e.field === "Task.Task_Name" || e.field === "package_description" || e.field === "default_qty" || e.field === "price" || e.field == "UOM.uom_description" ) {
                       var filterMultiCheck = this.thead.find("[data-field=" + e.field + "]").data("kendoFilterMultiCheck")
                       filterMultiCheck.container.empty();
                       filterMultiCheck.checkSource.sort({ field: e.field, dir: "asc" });

                       // uncomment the following line to handle any grouping from the original dataSource:
                       // filterMultiCheck.checkSource.group(null);

                       filterMultiCheck.checkSource.data(filterMultiCheck.checkSource.view().toJSON());
                       filterMultiCheck.createCheckBoxes();
                   }
               },
               filterable: true,
               sortable: true,
               reorderable: true,
                    autoSync: true,
                    resizable: true,
                    pageable: {
                        pageSize: 15,
                        buttonCount: 15,
                        pageSizes: [5, 15, 30, 60, 100, 500],
                        messages: {
                            display: "{0} - {1} of {2} master item", //{0} is the index of the first record on the page, {1} - index of the last record on the page, {2} is the total amount of records
                            empty: "No master item to display",
                            page: "Page",
                            of: "of {0}", //{0} is total amount of pages
                            itemsPerPage: "master items per page",
                            first: "Go to the first page",
                            previous: "Go to the previous page",
                            next: "Go to the next page",
                            last: "Go to the last page",
                            refresh: "Refresh"
                        }
               },

               columns: [
                   {
                       command: [{ name: "edit", text: { edit: " ", update: " ", cancel: " " } },
                           { name: "destroy", text: " ", iconClass: "k-icon k-i-delete"  }], title: "Action", width: "100px"
                   },
                   
                    
                   { field: "Property_Type", width: "100px", title: "Property Type", filterable: { multi: true, search: true } },
                   { field: "PropertyType_Code", width: "100px", title: "Property Type Code", filterable: { multi: true, search: true } },
                   { field: "PropertyType_Desc", title: "Property Description", width: "400px", filterable: { multi: true, search: true } },
                   { field: "Markup_Percentage", title: "Markup Percentage%", width: "120px", attributes: { style: "text-align:right;" }, filterable: { multi: true, search: true } },
                   { field: "Is_Active", title: "Active", hidden: false },
                   //{ command: ["edit", "destroy"], title: "Action", width: "185px" }
               ],
                    editable: "inline"
           }).data("kendoGrid");
        PropertyTypegrid.onAddClearFilter();


    });
    //Nithin Added to clear all filterrs
    function clearAllFilters() {
        $("#PropertyTypegrid").data("kendoGrid").dataSource.filter({});
        $(".k-grid-search input").val("").trigger("input");
    }

    //Tooltips For Kendogrid Action Btn

    $("#PropertyTypegrid").kendoTooltip({
        filter: ".k-grid-cancel",
        autoHide: true,
        content: function (e) {
            return "Cancel Item";
        }
    });
    $("#PropertyTypegrid").kendoTooltip({
        filter: ".k-grid-edit",
        autoHide: true,
        content: function (e) {
            return "Edit Item Details";
        }
    });
    $("#PropertyTypegrid").kendoTooltip({
        filter: ".k-grid-delete",
        autoHide: true,
        content: function (e) {
            return "Delete Item";
        }
    });
    $("#PropertyTypegrid").kendoTooltip({
        filter: ".k-grid-update",
        autoHide: true,
        content: function (e) {
            return "Update Item";
        }
    });
</script>




