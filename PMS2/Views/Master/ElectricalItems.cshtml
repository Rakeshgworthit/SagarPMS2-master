
@{
    ViewBag.Title = "ElectricalItems";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="panel box-shadow-none content-header">
    <div class="panel-body">
        <div class="col-md-6">
            <h3 class="animated fadeInLeft text-primary">Electrical Packages List</h3>
        </div>
    </div>
</div>
<div class="row mx-3">
    <div class="col-md-12">
        <div class="responsive-table">
            <div id="ElectricalItemgrid"></div>
        </div>
    </div>
</div>

<script id="itemTemplate" type="text/x-kendo-tmpl">
    <div>
        No data found. Do you want to add new item - '#: instance.filterInput.val() #' ?
    </div>
    <br />
    <button class="k-button" onclick="addNewCategory('#: instance.filterInput.val() #' )">Add new Category</button>
</script>

<script>

    var propertyType_Id = "";
    var NewItemId = "";
    var OldItemId = "";

    $(document).ready(function () {

        kendo.ui.Grid.fn.onAddClearFilter = function () {
            debugger
            var grid = this;
            grid.wrapper.find(".k-grid-add").on("click", function (e) {
                //console.log('onaddclearfilter');
                //send to first page if it's not already
                if (grid.pager) grid.pager.page(1);
                //clear the filter
                if (grid.dataSource) grid.dataSource.filter([]);
            });
        }
                     dataSource = new kendo.data.DataSource({
                        transport: {
                             read: function (options) {
                                $.ajax({
                                    url: '@Url.Action("PropertyTypeList", "Master")',
                                    type: "GET",
                                    dataType: "json",
                                    success: function (result) {
                                        debugger
                                        options.success(result);
                                    },
                                    error: function (result) {
                                        debugger
                                        options.error(result);
                                    }
                                });
                            },

                            parameterMap: function (options, operation) {
                                if (operation !== "read" && options.models) {
                                    return { models: kendo.stringify(options.models) };
                                }
                            }
                        },

                        batch: true,
                        pageSize: 15,
                        schema: {
                            data: "data.ElectricType", total: "data.TotalCount",
                            model: {
                                id: "PropertyType_Id",
                                fields: {
                                    PropertyType_Id: { editable: false, nullable: true, type: "number" },
                                    Property_Type: { nullable: true, maxlength: 100 },
                                    PropertyType_Code: { nullable: true, maxlength:100 },
                                    PropertyType_Desc: { nullable: true, maxlength: 100 },
                                    Markup_Percentage: { validation: { required: true,min:0, maxlength: 20 }, type: "number"  },
                                    //uom_description: { validation: { required: true } },
                                    Is_Active: { validation: { required: true }, defaultValue: true },
                                }
                            }
                        },

                    });

        var ElectricalItemgrid = $("#ElectricalItemgrid").kendoGrid({
                    dataSource: dataSource,
               navigatable: true,
               dataBound: function (e) {
                   $('.k-grid-add').unbind("click");
               },
                    pageable: true,


               //Nithin Added For Filter Ascending Order
               filterMenuInit: function (e) {
                   debugger
                   if (e.field === "Task.Task_Name" || e.field === "package_description" || e.field === "default_qty" || e.field === "price" || e.field == "UOM.uom_description" ) {
                       var filterMultiCheck = this.thead.find("[data-field=" + e.field + "]").data("kendoFilterMultiCheck")
                       filterMultiCheck.container.empty();
                       filterMultiCheck.checkSource.sort({ field: e.field, dir: "asc" });

                       // uncomment the following line to handle any grouping from the original dataSource:
                       // filterMultiCheck.checkSource.group(null);

                       filterMultiCheck.checkSource.data(filterMultiCheck.checkSource.view().toJSON());
                       filterMultiCheck.createCheckBoxes();
                   }
               },
               filterable: true,

               sortable: true,
               reorderable: true,
                    autoSync: true,
                    resizable: true,
                    pageable: {
                        pageSize: 15,
                        buttonCount: 15,
                        pageSizes: [5, 15, 30, 60, 100, 500],
                        messages: {
                            display: "{0} - {1} of {2} master item", //{0} is the index of the first record on the page, {1} - index of the last record on the page, {2} is the total amount of records
                            empty: "No master item to display",
                            page: "Page",
                            of: "of {0}", //{0} is total amount of pages
                            itemsPerPage: "master items per page",
                            first: "Go to the first page",
                            previous: "Go to the previous page",
                            next: "Go to the next page",
                            last: "Go to the last page",
                            refresh: "Refresh"
                        }
               },

               columns: [

                   { field: "Property_Type", width: "200px", title: "Property Type", filterable: { multi: true, search: true } },
                   { field: "PropertyType_Code", width: "200px", title: "Property Type Code", filterable: { multi: true, search: true } },
                   { field: "PropertyType_Desc", title: "Property Description", width: "300px", filterable: { multi: true, search: true } },
                   { field: "Markup_Percentage", title: "Markup Percentage%", width: "75px", attributes: { style: "text-align:right;" }, filterable: { multi: true, search: true } },
                   { field: "Is_Active", width:"75px", title: "Active", hidden: false },
                   //{ command: ["edit", "destroy"], title: "Action", width: "185px" }
               ],
            detailInit: detailInit,
            
            dataBound: function () {
                this.expandRow(this.tbody.find("tr.k-master-row").first());
            }
           }).data("kendoGrid");
        ElectricalItemgrid.onAddClearFilter();


    });
    //Nithin Added to clear all filterrs
    function clearAllFilters() {
        $("#ElectricalItemgrid").data("kendoGrid").dataSource.filter({});
        $(".k-grid-search input").val("").trigger("input");
    }

    var dataSourceOptionsChildGrid = {
            transport: {
                 read: function (options) {
                    //debugger;
                        debugger;
                                $.ajax({
                                    url: '@Url.Action("GetElectricalItemsMappingDetails", "Master")?PropertyType_Id=' + propTypeID,
                                    type: "GET",
                                    dataType: "json",
                                    success: function (result) {
                                        debugger
                                        options.success(result);
                                    },
                                    error: function (result) {
                                        debugger
                                        options.error(result);
                                    }
                                });

            },
                 create: function (options) {
                     debugger
                     var elecobj = {

                         PropertyType_Id: propertyType_Id,
                         Item_Id: options.data.models[0].Item.item_id

                     }
                            $.ajax({
                                     url: '@Url.Action("CrudElectriItemsType", "Master")',
                                    type: "POST",
                                    dataType: "json",
                                    data: { JsonItems: JSON.stringify(elecobj),mode : "Insert" },
                                    success: function (result) {
                                        debugger
                                        $("#ElectricalItemgrid").data('kendoGrid').dataSource.read();
                                        $("#ElectricalItemgrid").data('kendoGrid').refresh();
                                        if (result.data.Result > 0) {
                                            notify(result.data.Errormessage, "success");
                                        }
                                        else {
                                            notify(result.data.Errormessage, "error");
                                        }
                                        options.success(result);
                                    },
                                    error: function (result) {
                                        debugger
                                        options.error(result);//result
                                    }
                                });
                 },
                 update: function (options) {
                     debugger
                     var elecobj = {

                         PropertyType_Id: propertyType_Id,
                         Item_Id: options.data.models[0].Item.item_id

                     }
                                $.ajax({
                                    url: '@Url.Action("CrudElectriItemsType", "Master")',
                                    type: "POST",
                                    dataType: "json",
                                    data: { JsonItems: JSON.stringify(elecobj), mode: "Update" },
                                    success: function (result) {
                                        debugger
                                        if (result.data.Result > 0) {
                                            notify(result.data.Errormessage, "success");
                                        }
                                        else {
                                            notify(result.data.Errormessage, "error");
                                        }
                                        $("#ElectricalItemgrid").data('kendoGrid').dataSource.read();
                                        $("#ElectricalItemgrid").data('kendoGrid').refresh();
                                        options.success(result);
                                    },
                                    error: function (result) {
                                        debugger
                                        options.error(result);
                                    }
                                });
                                //to clear filter
                                clearAllFilters();
                            },
                 destroy: function (options) {
                     debugger
                     var obj = "Hi";
                                $.ajax({
                                    url: '@Url.Action("CrudElectriItemsType", "Master")',
                                    type: "POST",
                                    dataType: "json",
                                    data: { JsonItems: JSON.stringify(options.data.models[0]), mode: "Delete" },
                                    success: function (result) {
                                        debugger
                                        $("#ElectricalItemgrid").data('kendoGrid').dataSource.read();
                                        $("#ElectricalItemgrid").data('kendoGrid').refresh();
                                        if (result.data.Result > 0) {
                                            notify(result.data.Errormessage, "success");

                                        }
                                        else {
                                            notify(result.data.Errormessage, "error");
                                        }

                                        options.success(result);
                                    },
                                    error: function (result) {
                                        debugger
                                        options.error(result);
                                    }
                                });
                                 //to clear filter
                                 clearAllFilters();
            },
            parameterMap: function (options, operation) {
                if (operation !== "read" && options.models) {
                    return { models: kendo.stringify(options.models) };
                }
            }
        },
        batch: true,
            pageSize: 20,
            schema: {
                data: "data", total: "data.TotalCount",
                model: {
                    id: "ElectricalItemMapping_Id",
                    fields: {
                        ElectricalItemMapping_Id: { editable: false, type: "number" },
                        PropertyType_Id: { editable: false, type: "number" },
                        Item: { defaultValue: { item_id: 0, item_description: "No Category" }, validation: { required: true } },
                        Uom_Description: {  },
                        PropertyType: { required: true, maxlength: 250 },
                        Uom_Id: { editable: false, type: "number" },
                        Cost_Price: { type: "number", maxlength: 30 },
                        Selling_Price: { type: "number", maxlength: 30 }
                    }
                }
            }
        };

    function detailInit(e) {
        debugger;
        propertyType_Id = e.data.PropertyType_Id;
        propTypeID = propertyType_Id;

        $("<div/>").appendTo(e.detailCell).kendoGrid({
            dataSource: dataSourceOptionsChildGrid,
           /* columns: childgridcolumnOptions,*/
            serverPaging: true,
            serverSorting: true,
            serverFiltering: true,
            pageSize: 10,
            //filter: { field: "PropertyType", operator: "eq", value: "HDB" },
            scrollable: false,
            sortable: true,
            pageable: true,
            editable: "inline",
            edit: function (e) {
                //var data = e.model;
                debugger;
                //OldItemValue = e.container.find("[data-container-for='Item'] .k-input").text();
                OldItemId = e.model.Item.item_id;
            },
            toolbar: [{ name: "create", text: "Add New Item for this Property Type" }],
            columns: [
                //{
                //    command: [{name: "destroy", text: " ", iconClass: "k-icon k-i-delete"}], title: "Action", width: "50px"
                //},
                {
                    command: [{ name: "edit", text: { edit: " ", update: " ", cancel: " " } },
                    { name: "destroy", text: " ", iconClass: "k-icon k-i-delete" }], title: "Action", width: "100px"
                },
                { field: "ElectricalItemMapping_Id", hidden: true },
                { field: "PropertyType_Id", hidden: true },
                { field: "Uom_Id", title: "UOM", hidden: true },
                /*{ field: "Item_Id", width: "110px", hidden: false, template: '<input id="dropdown" />' },*/
                { field: "Item", width: "250px", title: "Item Description", attributes: { style: "text-align:left;"/*, filterable: { multi: true, search: true }*/ }, editor: ItemDropDownEditor, template: "#=Item.item_description#" },
                { field: "Uom_Description", title: "UOM", width: "75px" },

                { field: "Cost_Price", title: "Cost", width: "75px" },
                { field: "Selling_Price", title: "Selling Price", width: "75px" }
            ],
        });
    };

    //Tooltips For Kendogrid Action Btn

    $("#ElectricalItemgrid").kendoTooltip({
        filter: ".k-grid-cancel",
        autoHide: true,
        content: function (e) {
            return "Cancel Item";
        }
    });
    $("#ElectricalItemgrid").kendoTooltip({
        filter: ".k-grid-edit",
        autoHide: true,
        content: function (e) {
            return "Edit Item Details";
        }
    });
    $("#ElectricalItemgrid").kendoTooltip({
        filter: ".k-grid-delete",
        autoHide: true,
        content: function (e) {
            return "Delete Item";
        }
    });
    $("#ElectricalItemgrid").kendoTooltip({
        filter: ".k-grid-update",
        autoHide: true,
        content: function (e) {
            return "Update Item";
        }
    });

    function ItemDropDownEditor(container, options) {
        debugger

		$('<input required name="' + options.field + '"/>')
                        .appendTo(container)
                        .kendoDropDownList({
                             filter: "contains",
                            autoBind: false,
                            optionLabel: "No Category",
                            dataTextField: "item_description",
                            dataValueField: "item_id",
                            select: onSelectItem,
                            editable: true,
                               dataSource: {
                                    type: "json",
                                    transport: {
                                        read: {
                                            url: '@Url.Action("ElectricalItemsDropDownList", "Master")?PropertyType_Id='+ propertyType_Id,
                                            type: "GET",
                                            dataType: "json",
                                            contentType: "application/json; charset=utf-8"
                                        }
                                   },
                                   parameterMap: function (options, operation) {
                                       debugger;
                                       if (operation !== "read" && options.models) {
                                           return { models: kendo.stringify(options.models) };
                                       }
                                   },
                                schema: {
                                    data: "data"
                                   },
                                   sort: { field: "item_name", dir: "asc" },
                            },
                            noDataTemplate: $("#CategoryTemplate").html()
                        });
    }

    function onSelectItem(e) {
        debugger
        var detailGridWrapper = this.wrapper;
        var parentTR = detailGridWrapper.closest("tr.k-grid-edit-row");
        var cprice = parentTR.find("td[data-container-for='Cost_Price'] input[data-role='numerictextbox']").data("kendoNumericTextBox");
        var sprice = parentTR.find("td[data-container-for='Selling_Price'] input[data-role='numerictextbox']").data("kendoNumericTextBox");
        var Uomfeild = parentTR.find("[data-container-for='Uom_Description'] .k-input");
        if (e.dataItem === undefined) {
            /*options.data.models[0].Item = { item_id: 0, item_description: options.data.models[0].Item }*/
        }
        else {
            if (OldItemId == e.dataItem.item_id) {
                OldItemId = NewItemId = e.dataItem.item_id;
            }
            else {
                NewItemId = e.dataItem.item_id;
            }
            var ItemId = e.dataItem.item_id;
            GetItemDetails(e, ItemId, cprice, sprice, Uomfeild);
        }
    }

    function GetItemDetails(e, ItemId, cprice, sprice, Uomfeild) {
		$.ajax({
			url: '@Url.Action("GetItemByItemId", "Master")?ItemId=' + ItemId,
			type: "POST",
			dataType: "json",
			//data: { JsonPackageDetails: JSON.stringify(options.data.models[0]) },
			success: function (result) {
                debugger;
				//to get total row values in a grid
				var grid = e.sender.element.closest(".k-grid").data("kendoGrid");
				var row = e.sender.element.closest("tr");
				var dataItem = grid.dataItem(row);
                dataItem.set('Cost_Price', result.data.Items[0].price);
                dataItem.set('Uom_Description', result.data.Items[0].UOM.uom_description);
                //dataItem.set('Selling_Price', '20');
                cprice.enable(false);
                sprice.enable(false);
                $('[name="Uom_Description"]').attr("readonly", true);
			},
			error: function (result) {
                debugger;
			}
		});
	}


    function addNewCategory(name) {
        var List = new Array();
        debugger;
        var Values = {
            category_Id: 0,
          //  category_cd: 7,
            category_description:name,
            category_name: name,
            isactive:1
        };
        List.push(Values);
        var JsonValues = JSON.stringify(List);
         $.ajax({
                type: 'POST',
                url: '@Url.Action("CreateNewCategory", "Master")',
             data: { "JsonValues": JsonValues },
                dataType: 'Json',
                success: function (data) {
                    var Result = data.Result;
                    if (Result == "1") {
                    }
                    else {

                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert('Fail');
                    alert(jqXHR);
                }
            });
    }


</script>




