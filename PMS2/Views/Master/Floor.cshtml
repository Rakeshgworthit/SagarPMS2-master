@{
    ViewBag.Title = "Floor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="panel box-shadow-none content-header">
    <div class="panel-body">
        <div class="col-md-6">
            <h3 class="animated fadeInLeft text-primary">Floor List</h3>
        </div>
    </div>
</div>
<div class="row mx-3">
    <div class="col-md-12">
                <div class="responsive-table">
                    <div id="Floorgrid"></div>
        </div>
    </div>
</div>

<script>

    $(document).ready(function () {
        kendo.ui.Grid.fn.onAddClearFilter = function () {
            debugger
            var grid = this;
            grid.wrapper.find(".k-grid-add").on("click", function (e) {
                //console.log('onaddclearfilter');
                //send to first page if it's not already
                if (grid.pager) grid.pager.page(1);
                //clear the filter
                if (grid.dataSource) grid.dataSource.filter([]);
            });
        }
                    dataSource = new kendo.data.DataSource({
                        transport: {
                            read: function (options) {
                                $.ajax({
                                    url: '@Url.Action("FloorList", "Master")',
                                    type: "GET",
                                    dataType: "json",
                                    success: function (result) {
                                        debugger
                                        options.success(result);
                                    },
                                    error: function (result) {
                                        debugger
                                        options.error(result);
                                    }
                                });
                            },
                            create: function (options) {  
                                debugger
                                $.ajax({
                                    url: '@Url.Action("CreateFloor", "Master")',
                                    type: "POST",
                                    dataType: "json",
                                    data: { JsonFloor: JSON.stringify(options.data.models[0]) },
                                    success: function (result) {
                                        debugger
                                        
                                        if (result.data.Result > 0) {
                                            notify(result.data.Errormessage, "success");
                                        }
                                        else {
                                            notify(result.data.Errormessage, "error");
                                        }
                                        $("#Floorgrid").data('kendoGrid').dataSource.read();
                                        $("#Floorgrid").data('kendoGrid').refresh();
                                        options.success(result);
                                    },
                                    error: function (result) {
                                        debugger
                                        options.error(result);
                                    }
                                });
                            },
                            update: function (options) {
                                debugger
                                $.ajax({
                                    url: '@Url.Action("CreateFloor", "Master")',
                                    type: "POST",
                                    dataType: "json",
                                    data: { JsonFloor: JSON.stringify(options.data.models[0]) },
                                    success: function (result) {
                                        debugger
                                      
                                        if (result.data.Result > 0) {
                                            notify(result.data.Errormessage, "success");
                                            
                                        }
                                        else {
                                            notify(result.data.Errormessage, "error");
                                        }
                                        $("#Floorgrid").data('kendoGrid').dataSource.read();
                                        $("#Floorgrid").data('kendoGrid').refresh();
                                        
                                        options.success(result);
                                    },
                                    error: function (result) {
                                        debugger
                                        options.error(result);
                                    }
                                });
                                //to clear filter
                                $("#Floorgrid").data("kendoGrid").dataSource.filter({});
                            },
                            destroy: function (options) {
                                debugger
                                var floor_id = options.data.models[0].floor_id;
                                $.ajax({
                                    url: '@Url.Action("DeleteFloorByFloorId", "Master")?FloorId=' + floor_id,
                                    type: "POST",
                                    dataType: "json",
                                    success: function (result) {
                                        debugger
                                        if (result.data.Result > 0) {
                                           
                                            notify(result.data.Errormessage, "success");

                                        }
                                        else {
                                            notify(result.data.Errormessage, "error");
                                        }
                                        $("#Floorgrid").data('kendoGrid').dataSource.read();
                                        $("#Floorgrid").data('kendoGrid').refresh();
                                        options.success(result);
                                    },
                                    error: function (result) {
                                        debugger
                                        options.error(result);
                                    }
                                });
                                //to clear filter
                                $("#Floorgrid").data("kendoGrid").dataSource.filter({});
                            },
                            @*read: {
                                 url: '@Url.Action("FloorList", "Master")',
                                        type: "GET",
                                        dataType: "json"
                            },
                            update: {
                               url: '@Url.Action("CreateFloor", "Master")',
                                        type: "POST",
                                        dataType: "json",
                                complete: function (e) {
                                    $("#Floorgrid").data("kendoGrid").dataSource.read();
                                }

                            },
                            destroy: {
                                 url: '@Url.Action("DeleteFloor", "Master")',
                                        type: "POST",
                                        dataType: "json",
                                complete: function (e) {
                                    $("#Floorgrid").data("kendoGrid").dataSource.read();
                                }
                            },
                            create: {
                                url: '@Url.Action("CreateFloor", "Master")',
                                        type: "POST",
                                        dataType: "json",
                                complete: function (e) {
                                    $("#Floorgrid").data("kendoGrid").dataSource.read();
                                }
                            },*@
                            parameterMap: function (options, operation) {
                                if (operation !== "read" && options.models) {
                                    return { models: kendo.stringify(options.models) };
                                }
                            }
                        },
                        batch: true,
                        pageSize: 15,
                        schema: {
                            data: "data.Items", total: "data.TotalCount",
                            model: {
                                id: "floor_id",
                                fields: {
                                    floor_id: { editable: false, type: "number"  },
                                    floor_name: { validation: { required: true, maxlength: 14 }  },
                                    floor_description: { validation: { required: true, maxlength: 40 }  },
                                    isactive: { validation: { required: true }, defaultValue: true },
                                }
                            }
                        }
                    });

      var FloorGrid=     $("#Floorgrid").kendoGrid({
          dataSource: dataSource,
          dataBound: function (e) {
              $('.k-grid-add').unbind("click");
          },
                    navigatable: true,
          pageable: true,
          reorderable: true,
          toolbar: [{ name: "create", text: "Add New Floor" }, { name: "excel", text: "Export to Excel " }, { name: "search" }, { template: '   <a type="button" class="k-button" onclick="return  clearAllFilters()" style="float:right" >Clear All Filters</a>' }],
          excel: {
              fileName: "Floor List.xlsx",
              allPages: true,
          },
          //Nithin Added For Filter Ascending Order
          filterMenuInit: function (e) {
              debugger
              if (e.field === "floor_name" || e.field === "floor_description") {
                  var filterMultiCheck = this.thead.find("[data-field=" + e.field + "]").data("kendoFilterMultiCheck")
                  filterMultiCheck.container.empty();
                  filterMultiCheck.checkSource.sort({ field: e.field, dir: "asc" });

                  // uncomment the following line to handle any grouping from the original dataSource:
                  // filterMultiCheck.checkSource.group(null);

                  filterMultiCheck.checkSource.data(filterMultiCheck.checkSource.view().toJSON());
                  filterMultiCheck.createCheckBoxes();
              }
          },
                    filterable: true,
                    sortable: true,
                    autoSync: true,
                    resizable: true,
                    pageable: {
                   pageSize: 15,
                   buttonCount: 15,
                        pageSizes: [5, 10, 30, 60, 100, 500],
                        messages: {
                            display: "{0} - {1} of {2} floor", //{0} is the index of the first record on the page, {1} - index of the last record on the page, {2} is the total amount of records
                            empty: "No floor to display",
                            page: "Page",
                            of: "of {0}", //{0} is total amount of pages
                            itemsPerPage: "floor per page",
                            first: "Go to the first page",
                            previous: "Go to the previous page",
                            next: "Go to the next page",
                            last: "Go to the last page",
                            refresh: "Refresh"
                        }
               },
          columns: [
                        {
                       command: [{ name: "edit", text: { edit: " ", update: " ", cancel: " " } },
                                { name: "destroy", text: " ", iconClass: "k-icon k-i-delete"}], title: "Action", width: "100px"
                   },
                        { field: "floor_name", title: "Name", filterable: { multi: true, search: true }},
                        { field: "floor_description", title: "Description" ,filterable: { multi: true, search: true }},
                        { field: "isactive", title: "is active",hidden:true },
                        /*{ command: ["edit", "destroy"], title: "Action", width: "185px" }*/],
                    editable: "inline"
      }).data("kendoGrid");
           FloorGrid.onAddClearFilter();
    });
    //Nithin Added to clear all filterrs
    function clearAllFilters() {
        $("#Floorgrid").data("kendoGrid").dataSource.filter({});
        $(".k-grid-search input").val("").trigger("input");  
    }

    //Tooltips For Kendogrid Action Btn

    $("#Floorgrid").kendoTooltip({
        filter: ".k-grid-cancel",
        autoHide: true,
        content: function (e) {
            return "Cancel Floor";
        }
    });
    $("#Floorgrid").kendoTooltip({
        filter: ".k-grid-edit",
        autoHide: true,
        content: function (e) {
            return "Edit Floor Details";
        }
    });
    $("#Floorgrid").kendoTooltip({
        filter: ".k-grid-delete",
        autoHide: true,
        content: function (e) {
            return "Delete Floor";
        }
    });
    $("#Floorgrid").kendoTooltip({
        filter: ".k-grid-update",
        autoHide: true,
        content: function (e) {
            return "Update Floor";
        }
    });
</script>







