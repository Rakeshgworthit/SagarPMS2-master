@model PMS.Models.RegisterViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="panel box-shadow-none content-header">
    <div class="panel-body">
        <div class="row">
            <div class="col-md-6 col-9">
                <h3 class="animated fadeInLeft text-primary">
                    @if (String.IsNullOrEmpty(Model.Id))
                    {
                        <text> Add Users</text>
                    }
                    else
                    {
                        <text> Edit Users</text>
                    }
                </h3>
            </div>
            <div class="col-md-6 col-5 text-right">
                @*onclick="openModelpop('/Contract/NewContract','id',0);"*@
                <a href="/Account/Users" class='btn btn-primary pull-right'>
                    <i class="fa fa-user" aria-hidden="true"></i><span style="padding-left:10px;">Users</span>
                </a>

                <div class="col-md-10">
                    <input type="button" class="btn btn-primary" value="Reset Password" onclick="ResetPassword();" />
                </div>

            </div>
        </div>
    </div>
</div>

<script>
    $('#myTab a').on('click', function (e) {
        e.preventDefault()
        $(this).tab('show')
    })
</script>

<div class="row mx-1">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <div id="exTab3">

                    <ul class="nav nav-pills  " id="myTab" role="tablist">
                        <li class="nav-item ">
                            <a href="#profile_tab" class="nav-link active" data-toggle="pill" role="tab" aria-controls="profile-tab" id="profile-tab">Profile</a>
                        </li>
                        @if (string.IsNullOrEmpty(Model.UserRoleName))
                        {
                            <li id="LiBranch" name="LiBranch" class="nav-item disabled">
                                <a href="#branches_tab" class="nav-link" data-toggle="pill" role="tab" aria-controls="branch-tab" id="branch-tab" aria-selected="false">Branches</a>
                            </li>
                        }


                        <li id="LiRole" name="LiRole" class="nav-item disabled">
                            <a href="#roles_tab" id="roles-tab" class="nav-link" data-toggle="pill" role="tab" aria-controls="roles-tab" aria-selected="false">Roles</a>
                        </li>

                    </ul>                    


                    <div class="tab-content" id="nav-tabContent">
                        <div class="tab-pane fade show active" role="tabpanel" id="profile_tab" aria-labelledby="profile-tab">
                            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(o => o.Id)

                                @*foreach (var modelState in ViewData.ModelState.Values)
                    {
                        foreach (var err in modelState.Errors)
                        {
                            <p class="text-danger">@err.ErrorMessage</p>
                        }
                    }*@

                                if (!String.IsNullOrEmpty(ViewBag.MSG))
                                {
                                    <div class="alert alert-info fade in top-20" style="opacity:1">
                                        <a href="#" class="close" data-dismiss="alert">&times;</a>
                                        <strong>@ViewBag.MSG</strong>
                                    </div>
                                }

                                @*@Html.ValidationSummary("", new { @class = "text-danger" })*@
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">Name</label>
                                            <div>
                                                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @tabindex = "1" })
                                                @Html.ValidationMessageFor(o => o.Name, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        @if (String.IsNullOrEmpty(Model.Id))
                                        {
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Password, new { @class = " control-label" })
                                                <div class="input-group">
                                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", @tabindex = "3" })
                                                    <div class="input-group-append">
                                                        <button id="show_password" class="btn btn-primary" type="button">
                                                            <span class="fa fa-eye"></span>
                                                        </button>
                                                    </div>
                                                    @Html.ValidationMessageFor(o => o.Password, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        }
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                                            <div>
                                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @tabindex = "5" })
                                                @Html.ValidationMessageFor(o => o.Email, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label " for="pwd">Address 2</label>
                                            <div>
                                                @Html.TextBoxFor(o => o.address2, new { @class = "form-control", @tabindex = "7" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label " for="pwd">Address 4</label>
                                            <div>
                                                @Html.TextBoxFor(o => o.address4, new { @class = "form-control", @tabindex = "9" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label" for="email">Country</label>
                                            <div>
                                                @Html.DropDownListFor(o => o.country_id, Model.CountryList, new { @class = "form-control", @tabindex = "11" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label " for="email">Phone</label>
                                            <div>
                                                @Html.TextBoxFor(o => o.phone, new { @class = "form-control", @tabindex = "13" })
                                            </div>
                                        </div>


                                    </div>
                                    <div class="col-md-6">

                                        <div class="form-group">
                                            <label class="control-label">User Name</label>
                                            <div>
                                                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @tabindex = "2" })
                                                @Html.ValidationMessageFor(o => o.UserName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        @if (String.IsNullOrEmpty(Model.Id))
                                        {
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
                                                <div class="input-group">
                                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @tabindex = "4" })
                                                    <div class="input-group-append">
                                                        <button id="show_Confirmpassword" class="btn btn-primary" type="button">
                                                            <span class="fa fa-eye"></span>
                                                        </button>
                                                    </div>
                                                    @Html.ValidationMessageFor(o => o.ConfirmPassword, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        }
                                        <div class="form-group">
                                            <label class="control-label " for="pwd">Address 1</label>
                                            <div>
                                                @Html.TextBoxFor(o => o.address1, new { @class = "form-control", @tabindex = "6" })
                                                @Html.ValidationMessageFor(o => o.address1, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label " for="pwd">Address 3</label>
                                            <div>
                                                @Html.TextBoxFor(o => o.address3, new { @class = "form-control", @tabindex = "8" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label " for="email">ZipCode</label>
                                            <div>
                                                @Html.TextBoxFor(o => o.zip_code, new { @class = "form-control", @tabindex = "10" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label " for="email">Mobile</label>
                                            <div>
                                                @Html.TextBoxFor(o => o.mobile, new { @class = "form-control", @tabindex = "12" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label" for="email">Is Active</label>
                                            <div>
                                                @Html.DropDownListFor(o => o.is_active, Model.StatusList, new { @class = "form-control", @tabindex = "14" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group col-md-12 text-right">
                                        <input type="submit" class="btn btn-primary" value="Submit" />
                                    </div>
                                </div>

                            }

                        </div>

                        <div class="tab-pane fade" role="tabpanel" id="branches_tab" aria-labelledby="branch-tab">

                            <div class="row">
                                <div class="col-md-12 my-3">
                                    <div class="form-group">
                                        <input type="text" id="SearchBranch" name="SearchBranch" onkeyup="LoadBranches();" onkeydown="LoadBranches();" class="form-control" style="width:400px" />
                                        <input type="hidden" id="hdnBranchID" name="hdnBranchID" value="" />
                                    </div>
                                    <input type="button" id="btnAddBranch" name="btnAddBranch" class="btn btn-primary" value="Add" onclick="AddBranch();" />

                                </div>
                                <div class="col-md-12">
                                    <div id="div_Branches" name="div_Branches"></div>
                                </div>

                            </div>
                        </div>

                        <div class="tab-pane fade" role="tabpanel" id="roles_tab" aria-labelledby="roles-tab">
                            <div class="row mt-4">
                                @foreach (var roles in Model.RoleList)
                                {<div class="col-md-2 mt-2">
                                        <div class="form-group">
                                            <div class="checkbox">
                                                <label class="control-label"><input id="userRole_@roles.Id" name="userRole_@roles.Id" type="checkbox" onclick="UpdateRole('@roles.Id','@roles.Name');" @if (roles.RoleId != "0") { <text> checked="checked" </text> } class="userRoles"> <strong>@roles.Name</strong></label>
                                            </div>

                                        </div>
                                    </div>
                                }

                                <div class="col-md-3 ">
                                    <input type="button" id="btnAddRole" name="btnAddRole" class="btn btn-primary " value="Update" onclick="AddRole();" />
                                </div>
                            </div>
                            <div class="row mt-2 ml-2">
                                <div class="form-group" id="divSupplier" style="display:none">
                                    @*<label class="control-label" for="from_date"><span class="data_inline_label">Supplier</span></label>*@
                                    <select name="SupplierId" id="SupplierId" style="width:200px !important" class="form-control">
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {

        $('#userRole_3').attr('hidden', true);

        if ($("#Id").val() == "") {
            $('a[data-toggle="tab"]').on('click', function () {
                if ($(this).parent('li').hasClass('disabled')) {
                    return false;
                };
            });
        } else {
            $("#LiBranch").removeClass('disabled');
            $("#LiRole").removeClass('disabled');
            $("#UserName").attr("disabled", "disabled")
        }

        if ($("#Id").val() != "") {
            LoadUserBranchs();
        }
        $('#show_password').hover(function show() {
            //Change the attribute to text
            $('#Password').attr('type', 'text');
            $('.icon').removeClass('fa fa-eye-slash').addClass('fa fa-eye');
        },
        function () {
                //Change the attribute back to password
                $('#Password').attr('type', 'password');
                $('.icon').removeClass('fa fa-eye').addClass('fa fa-eye-slash');
            });
        $('#show_Confirmpassword').hover(function show() {
            //Change the attribute to text
            $('#ConfirmPassword').attr('type', 'text');
            $('.icon').removeClass('fa fa-eye-slash').addClass('fa fa-eye');
        },
            function () {
                //Change the attribute back to password
                $('#ConfirmPassword').attr('type', 'password');
                $('.icon').removeClass('fa fa-eye').addClass('fa fa-eye-slash');
            });

    });

    function LoadBranches() {
        $("#SearchBranch").autocomplete({
            source: "/Home/GetBranchList?code=" + $("#SearchBranch").val(),
            minLength: 3,
            select: function (event, ui) {
                $("#SearchBranch").val(ui.item.label);
                $("#hdnBranchID").val(ui.item.id);
            }
        });
    }

    function AddBranch() {
        if ($("#Id").val() == "") {
            notify("Please Save User details first.", "error");
            $("#SearchBranch").val("");
        }
        else {
            if ($("#hdnBranchID").val() != "" && $("#hdnBranchID").val() > 0) {
                $.loader({ content: "<img src='/Content/img/Preloader_3.gif' />" });
                $.ajax({
                    type: "POST",
                    url: "/Account/AssignBranch",
                    data: {
                        userId: $("#Id").val(),
                        Id: $("#hdnBranchID").val()
                    },
                    success: function (result) {
                        if (result.cls == "success") {
                            $("#hdnBranchID").val("");
                            $("#SearchBranch").val("");
                            LoadUserBranchs();
                            notify(result.msg, result.cls);
                        } else if (result.cls == "error") {
                            notify(result.msg, result.cls);
                            $.loader('close');
                        }
                    },
                    error: function (req, status, error) {
                        // do something with error
                        $.loader('close');
                    }
                });
            } else {
                notify("Please select a branch.", "error");
            }
        }
    }

    function LoadUserBranchs() {
        $.loader({ content: "<img src='/Content/img/Preloader_3.gif' />" });
        $.ajax({
            type: "POST",
            url: "/Account/UserBranches",
            data: {
                userId: $("#Id").val()
            },
            success: function (result) {
                $("#div_Branches").html(result);
                $.loader('close');
            },
            error: function (req, status, error) {
                // do something with error
                $.loader('close');
            }
        });
    }

    function RemoveBranch(Id) {
        if (confirm('Are you sure you want to delete?')) {
            $.loader({ content: "<img src='/Content/img/Preloader_3.gif' />" });
            $.ajax({
                type: "POST",
                url: "/Account/RemoveBranch",
                data: {
                    Id: Id
                },
                success: function (result) {
                    $.loader('close');
                    if (result.cls == "error") {
                        notify(result.msg, result.cls);
                    } else {
                        LoadUserBranchs();
                        notify(result.msg, result.cls);
                    }
                },
                error: function (req, status, error) {
                    // do something with error
                    $.loader('close');
                }
            });
        }
    }

    function ChangeStatus(obj) {
        $.loader({ content: "<img src='/Content/img/Preloader_3.gif' />" });
        $.ajax({
            type: "POST",
            url: "/Account/ChangeStatus",
            data: {
                Id: obj
            },
            success: function (result) {
                $.loader('close');
                if (result.cls == "error") {
                    notify(result.msg, result.cls);
                } else {
                    LoadUserBranchs();
                    //notify(result.msg, result.cls);
                }
            },
            error: function (req, status, error) {
                // do something with error
                $.loader('close');
            }
        });
    }

    function UpdateBranchAdmin(Id,IsBranchAdmin) {
        $.loader({ content: "<img src='/Content/img/Preloader_3.gif' />" });
        $.ajax({
            type: "POST",
            url: "/Account/UpdateBranchAdmin",
            data: {
                Id: Id,
                bIsBranchAdmin: IsBranchAdmin
            },
            success: function (result) {
                $.loader('close');
                if (result.cls == "error") {
                    notify(result.msg, result.cls);
                } else {
                    LoadUserBranchs();
                }
            },
            error: function (req, status, error) {
                $.loader('close');
            }
        });
    }

    function AddRole() {
        debugger;
        var role = 0;
        var roleName = "";
        var mulSelect = 0
        if ($("#userRole_1").is(":checked")) {
            roleName = "SuperAdmin";
            mulSelect = 1;
        } if ($("#userRole_2").is(":checked")) {
            roleName = "User";
            mulSelect = mulSelect + 1;
        } if ($("#userRole_3").is(":checked")) {
            roleName = "Salesman";
            mulSelect = mulSelect + 1;
        } if ($("#userRole_4").is(":checked")) {
            roleName = "Supplier";
            mulSelect = mulSelect + 1;
        }

        if ($("#Id").val() == "") {
            notify("Please Save User details first.", "error");
            $('#userRole_1').attr('checked', false);
            $('#userRole_2').attr('checked', false);
            $('#userRole_3').attr('checked', false);
            $('#userRole_4').attr('checked', false);
        }
        else {
            if (mulSelect >= 2) {
                notify("Please select only 1 role", "error");
            }
            else {
                if (roleName == "") {
                    notify("Please select a role", "error");
                } else {
                    $.loader({ content: "<img src='/Content/img/Preloader_3.gif' />" });
                    $.ajax({
                        type: "POST",
                        url: "/Account/UpdateRole",
                        data: {
                            Id: $("#Id").val(),
                            roleId: roleName,
                            supplierId: $('#SupplierId').val()
                        },
                        success: function (result) {
                            $.loader('close');
                            if (result.cls == "success" || result.cls == "warning" || result.cls == "error") {
                                notify(result.msg, result.cls);
                            } else {
                                location.reload();
                            }
                        },
                        error: function (req, status, error) {
                            $.loader('close');
                        }
                    });
                }
            }
        }
    }

    function UpdateRole(role, rolename) {
        debugger
        $('#divSupplier').hide();
        if (role == "1") {
            if ($("#userRole_" + role).is(":checked")) {
                $('#userRole_2').attr('checked', false);
                $('#userRole_3').attr('checked', false);
            }
        } if (role == "2") {
            if ($("#userRole_" + role).is(":checked")) {
                $('#userRole_1').attr('checked', false);
                $('#userRole_3').attr('checked', false);
            }
        }
        if (role == "3") {
            if ($("#userRole_" + role).is(":checked")) {
                $('#userRole_1').attr('checked', false);
                $('#userRole_2').attr('checked', false);
            }
        }
        if (role == "4") {
            if ($("#userRole_" + role).is(":checked")) {
                $('#userRole_1').attr('checked', false);
                $('#userRole_2').attr('checked', false);
                $('#divSupplier').show();
                getsupplierlist();
            }
        }
    }

    function getsupplierlist() {
        $.get('@Url.Action("bindsupplier", "master")', function (list) {
			debugger
			if (list.data != null) {
				var items = [];
				// items.push("<option value=" + 0 + ">" + "--select customer--" + "</option>");
				var i;
				for (i = 0; i < list.data.length; i++) {
                    items.push("<option value=" + list.data[i].Supplier_id + ">" + list.data[i].Supplier_Name + "</option>");
				}
                $("#SupplierId").html(items.join(' '));
                $('#SupplierId').select2();
			}
			else {
				var items = [];
				//items.push("<option value=" + 0 + ">" + "all" + "</option>");
                $("#SupplierId").html(items.join(' '));
                $('#SupplierId').select2();
			}
		});
    }

    function ResetPassword() {
        debugger;
        var UserName = $("#UserName").val();
        var email = $("#Email").val();
        openModelpopup('/Account/ResetPassword', 'code', encodeURIComponent(UserName), 'Email', email);
        
    }
</script>
